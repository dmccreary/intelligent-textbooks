{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Building Intelligent Textbooks","text":"<p>Intelligent textbooks guide students through concepts on their quest for knowledge.</p> <p>Welcome to the website for a step-by-step guide to building intelligent textbooks using open standards.</p> <p>Most of the examples on this website use the mkdocs build system  paired with generative AI to create and maintain intelligent textbooks.  We also leverage the material theme to create customized look-and-feel systems for textbooks.</p> <p>We feel that many courses today can benefit for high-quality online textbooks that have some of the following features:</p> <ol> <li>Powerful and easy to use Search</li> <li>Site Navigation</li> <li>MicroSims - adding interactive simulations to any page using p5.js or iframes</li> <li>Glossary of Terms</li> <li>Table of Contents - generate a table of contents for the entire book</li> <li>Link Checker - check for broken links on the website</li> <li>Social Media Previews</li> <li>Rendering Formulas - allow pages to include complex equations and mathematical formulas</li> <li>Code Highlighting - make code easy to view with color syntax highlighting</li> <li>License Management with a link to the license in the footer of each page</li> <li>Site Analytics with Google Analytics</li> <li>Edit from GitHub</li> <li>Automatic Build</li> <li>Quiz Management</li> <li>High quality website logo and favicon generate for multiple environments</li> <li>An easy-to-visualize Concept Graph that shows all the concepts in the class and their dependencies.</li> </ol>"},{"location":"about/","title":"About This Website","text":"<p>This website is part of a series of resources to help teachers from around the world create the foundation for free and open intelligent textbooks.</p> <p>There are many ways to store intelligent textbooks on a website. Many of our teachers don't want to pay a hosting service for hosting their content.  Since GitHub Pages is free, we focussed on GitHub Pages publishing tools that support Markdown, code highlighting and equations on GitHub.</p> <p>When we gave ChatGPT the following requirements:</p> <ol> <li>Content is stored in Markdown format</li> <li>Easy publishing to GitHub pages</li> <li>Ability to format code</li> <li>Ability to format equations</li> </ol> <p>Here is the summary of ChatGPT's recommendation:</p> <p>MkDocs with the Material Theme is the most aligned with your requirements due to its simplicity, robust features, and ease of deployment to GitHub Pages. It handles code  highlighting and mathematical formulas gracefully and has a straightforward configuration process.</p> <p>We have also found the mkdocs-material support extreamly good, with our questions often being answered within hours.</p> <p>Because of the close match of mkdocs-material's features with our intelligent textbook requirements, we have created about 20 sample websites that test these tools.  We have also found that mkdocs-material can be quickly extended to support the features we need in advanced intelligent textbooks.</p> <p>Note that these tools generate a 2.9 level intelligent textbook.  THis is up to but does not include personalization to the knowledge of the student.  This gets your textbook ready to move to level 3, where a knowledge graph of what concepts they are aware of are used to generate personalized content.</p> <p>We hope the glossary and tutorials we provide are useful.</p>"},{"location":"about/#references","title":"References","text":"<p>Sample ChatGPT Dialog</p>"},{"location":"code-highlight-test/","title":"Code Syntax Color Highlight Test","text":""},{"location":"code-highlight-test/#python","title":"Python","text":"<pre><code>hello_string = \"Hello World!\"\nprint(hello_string)\nx = 1\nif x == 1:\n    # indented four spaces\n    print(\"x is 1.\")\n</code></pre>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"feedback/","title":"Feedback on Open Intelligent Textbooks","text":"<p>Our online textbook depend on continuous feedback to improve.</p> <ol> <li> <p>First, you are encouraged to connect with me, the primary author, anytime on LinkedIn and join our AI Learning Management Systems LinkedIn Group. </p> </li> <li> <p>Please feel free to submit any issues to our GitHub Issue system.  All pull-requests with fixes to errors or additions are always welcome.</p> </li> <li> <p>Please fill out a short survey and give us ideas on how we can create better tools for building Open Intelligent Textbooks in the future.</p> </li> </ol>"},{"location":"glossary-v2/","title":"Glossary v2","text":""},{"location":"glossary-v2/#automatic-build","title":"Automatic Build","text":"<p>A process that regenerates and/or redeploys the documentation automatically whenever changes are made to source files, typically triggered by a continuous integration (CI) tool or build server. Ensures that documentation is always up-to-date without manual intervention.</p>"},{"location":"glossary-v2/#code-highlighting","title":"Code Highlighting","text":"<p>A feature that applies syntax-specific color schemes and formatting to code blocks within the documentation. Improves readability and comprehension of code examples by distinguishing keywords, variables, and other language constructs.</p>"},{"location":"glossary-v2/#concept-graph","title":"Concept Graph","text":"<p>A visual representation of the relationships between topics, concepts, and terms within the documentation. Helps users navigate complex material, see how ideas interconnect, and discover related information.</p>"},{"location":"glossary-v2/#favicon","title":"Favicon","text":"<p>A small icon associated with a website, displayed in browser tabs, bookmarks, and browsing history. Provides a recognizable visual identity that makes the site easily identifiable among multiple open pages.</p>"},{"location":"glossary-v2/#formulas","title":"Formulas","text":"<p>Mathematical or scientific expressions integrated into the documentation, often rendered using tools such as LaTeX or MathJax. Enables precise and readable presentation of equations, enhancing clarity in technical and scholarly content.</p>"},{"location":"glossary-v2/#glossary-of-terms","title":"Glossary of Terms","text":"<p>A dedicated section that provides definitions and explanations of key terms, jargon, and acronyms used throughout the documentation. Serves as a quick reference to ensure consistent understanding of terminology across readers.</p>"},{"location":"glossary-v2/#edit-from-github","title":"Edit from GitHub","text":"<p>An integrated link within the documentation that directs users to the corresponding source file on GitHub. Encourages community involvement by allowing readers to propose edits, corrections, or improvements through pull requests.</p>"},{"location":"glossary-v2/#license","title":"License","text":"<p>A statement that specifies the legal terms under which the documentation and related materials can be used, modified, and distributed. Clarifies permissions and restrictions, providing guidance to users and contributors.</p>"},{"location":"glossary-v2/#link-checker","title":"Link Checker","text":"<p>A tool or script that verifies the integrity and accessibility of hyperlinks within the documentation. Ensures that references remain accurate and functional, improving user experience and maintaining credibility.</p>"},{"location":"glossary-v2/#microsim","title":"MicroSim","text":"<p>A small-scale, self-contained example or simulation embedded within the documentation. Allows readers to interact with or test concepts in a controlled environment for deeper understanding and hands-on learning.</p>"},{"location":"glossary-v2/#navigation","title":"Navigation","text":"<p>The organized structure of menus, sections, and links that guide readers through the documentation. Facilitates ease of use, enabling readers to find information efficiently.</p>"},{"location":"glossary-v2/#social-media-previews","title":"Social Media Previews","text":"<p>Metadata added to web pages that control how content is displayed when shared on social media platforms. Increases the appeal and clarity of shared links, encouraging users to engage with and disseminate the documentation.</p>"},{"location":"glossary-v2/#table-of-contents","title":"Table of Contents","text":"<p>A hierarchical listing of page headings and sections typically displayed in a sidebar or at the start of a page. Helps users quickly understand the scope of the content and jump directly to areas of interest.</p>"},{"location":"glossary-v2/#website-analytics","title":"Website Analytics","text":"<p>Tools and scripts used to collect and analyze data about how users interact with the documentation. Informs continuous improvement efforts by providing insights into user behavior, popular content, and navigation patterns.</p>"},{"location":"glossary/","title":"Glossary of Terms for mkdocs for Intelligent Textbooks","text":""},{"location":"glossary/#admonition","title":"Admonition","text":"<p>A section of text that is separate from the main flow of text.</p> <p>Admonitions are designed to that they can be quickly skipped over if the user is not concerned with the topic.</p> <p>In mkdocs-material admonitions are used to store text such as abstracts,  note, info, tip, success, question, warning, failure, danger, bug, example and quote.</p> <p>mkdocs-material admonitions documentation</p> <ul> <li>Also known as: \"call outs\"</li> </ul>"},{"location":"glossary/#automatic-build","title":"Automatic Build","text":"<p>Using an automatic process that generates HTML from the markdown files.</p> <p>Automatic builds for mkdocs can be automatically executed whenever any part of the mkdocs.yml or the files in the <code>docs</code> directory change.  On GitHub, a GitHub action can be configured to achieve this. A process that regenerates and/or redeploys the documentation automatically whenever changes are made to source files, typically triggered by a continuous integration (CI) tool or build server. Ensures that documentation is always up-to-date without manual intervention.</p>"},{"location":"glossary/#code-highlighting","title":"Code Highlighting","text":"<p>The process of rendering source code with visually distinct styles to enhance readability and comprehension.</p> <p>Mkdocs material allows this feature to be enabled by changing the mkdocs.yml configuration file.</p> <p>A feature that applies syntax-specific color schemes and formatting to code blocks within the documentation. Improves readability and comprehension of code examples by distinguishing keywords, variables, and other language constructs.</p>"},{"location":"glossary/#concept-graph","title":"Concept Graph","text":"<p>A structured representation of concepts and their interrelationships, typically organized as nodes connected by edges.</p> <p>Concept Graphs are used to create lesson plans and learning roadmaps that are customized to a students learning objectives.</p>"},{"location":"glossary/#deep-linking","title":"Deep Linking","text":"<p>The ability to send a link to another person in a chat or e-mail that links directly to a subsection of a document.</p> <p>Example: You can send a link directly to a specific term in the Glossary of Terms</p>"},{"location":"glossary/#embedding","title":"Embedding","text":"<p>A numeric vector representation of text that encodes semantic meaning, enabling large language models and semantic search systems to compare and rank content based on conceptual similarity rather than just keyword matching.</p> <p>Example in an Intelligent Textbook: When a student highlights a concept, the intelligent textbook generates embeddings for that concept and searches its database of content for related topics that share similar embeddings. As a result, it can suggest complementary reading sections, practice questions, or simulations that align with the student\u2019s current focus, thus enhancing personalized learning.</p> <p>A visual representation of the relationships between topics, concepts, and terms within the documentation. Helps users navigate complex material, see how ideas interconnect, and discover related information.</p>"},{"location":"glossary/#favicon","title":"Favicon","text":"<p>A small icon associated with a webpage, displayed by web browsers in tabs, bookmarks, or address bars.</p> <p>Mathematical or scientific expressions integrated into the documentation, often rendered using tools such as LaTeX or MathJax. Enables precise and readable presentation of equations, enhancing clarity in technical and scholarly content.</p>"},{"location":"glossary/#formulas","title":"Formulas","text":"<p>Mathematical expressions that represent relationships between variables, constants, and functions.</p> <p>Mathematical or scientific expressions integrated into the documentation, often rendered using tools such as LaTeX or MathJax. Enables precise and readable presentation of equations, enhancing clarity in technical and scholarly content.</p>"},{"location":"glossary/#github-actions","title":"GitHub Actions","text":"<p>Scripts that perform build processes on GitHub servers.</p> <p>GitHub actions can automatically be run when any new content is updated in the docs directory or the mkdocs.yml file.</p> <p>A workflow automation service integrated into GitHub that executes predefined tasks in response to repository events.</p>"},{"location":"glossary/#glossary","title":"Glossary","text":"<p>A controlled vocabulary that lists specialized terms and their definitions to ensure consistent understanding.</p> <ul> <li>Also known as: Glossary of Terms</li> </ul>"},{"location":"glossary/#hyper-personalization","title":"Hyper-Personalization","text":"<p>The ability for a textbook to be customized to the needs of an individual learner.</p> <p>Modern textbooks allow hyper-personalization to be done in real-time using chatbots and agents.</p>"},{"location":"glossary/#edit-icon","title":"Edit Icon","text":"<p>The ability to add an \"Edit Icon\" to the top of each page in a textbook.</p> <p>Mkdocs material allows the Edit Icon to move the user directly to a form where they can click the Edit icon to change text.  By doing a Save a GitHub action can be triggered to update the HTML of the site.</p> <p>This feature allows non-technical staff to change and preview changes without having to setup a local build process on their local computer or server.</p>"},{"location":"glossary/#keyword-search","title":"Keyword Search","text":"<p>A retrieval method that matches documents against user-supplied words or phrases to identify relevant content.</p> <p>See also: semantic search</p>"},{"location":"glossary/#glossary-of-terms","title":"Glossary of Terms","text":"<p>A dedicated section that provides definitions and explanations of key terms, jargon, and acronyms used throughout the documentation. Serves as a quick reference to ensure consistent understanding of terminology across readers.</p>"},{"location":"glossary/#edit-from-github","title":"Edit from GitHub","text":"<p>An integrated link within the documentation that directs users to the corresponding source file on GitHub.</p> <p>Edit links Encourages community involvement by allowing readers to propose edits, corrections, or improvements through pull requests.  Users do not need to understand how the build process works on their local systems to generate an updated web page.</p>"},{"location":"glossary/#iso-definition","title":"ISO Definition","text":"<p>A term definition is considered to be consistent with ISO metadata registry guideline ISO/IEC 11179 if it meets the following criteria:</p> <ol> <li>Precise</li> <li>Concise</li> <li>Distinct</li> <li>Non-circular</li> <li>Unencumbered with business rules</li> </ol>"},{"location":"glossary/#learning-graph","title":"Learning Graph","text":"<p>A directed graph of concepts that reflects the order that concepts should be learned to master a new concept.</p>"},{"location":"glossary/#license","title":"License","text":"<p>A legal instrument specifying permissions, conditions, and restrictions for using, modifying, or redistributing content or software.</p> <p>mkdoc material allows you to place your license link on the footer of each page.</p> <p>A statement that specifies the legal terms under which the documentation and related materials can be used, modified, and distributed.</p> <p>Clarifies permissions and restrictions, providing guidance to users and contributors.</p> <p>Textbooks pages can be generated with links in their footer to the creative commons licenses.</p>"},{"location":"glossary/#link-checker","title":"Link Checker","text":"<p>A tool that verifies the validity and accessibility of hyperlinks within a given set of documents or webpages.</p>"},{"location":"glossary/#markdown","title":"Markdown","text":"<p>Markdown: A lightweight markup language with plain text formatting syntax designed to be easy to read and write. It is primarily used for creating formatted documents and web content, converting plain text to structured formats such as HTML or PDF through a rendering process.</p> <p>Example: Markdown syntax allows for the creation of structured content. For instance:</p> <ul> <li>To create a header: # Header 1 or ## Header 2</li> <li>To format text in bold: bold text</li> <li>To create a link: Link text</li> <li>To include an image: </li> </ul> <p>For example, to write a numbered list:</p> <pre><code>1. Item 1\n1. Item 2\n1. Item 3\n</code></pre> <p>Markdown will be rendered as the following:</p> <ol> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> </ol> <p>Note that the item counter is automatically calculated.</p>"},{"location":"glossary/#material","title":"Material","text":"<p>A popular theme for the mkdocs build system.</p> <p>The Material Theme currently has over 21K stars on GitHub.  This is more than 10x any of the other themes for mkdocs.</p>"},{"location":"glossary/#mkdocs","title":"Mkdocs","text":"<p>A documentation build system that leverages Markdown syntax for generating textbooks and websites.</p> <p>A tool or script that verifies the integrity and accessibility of hyperlinks within the documentation.</p> <p>With mkdocs material, link checking - both internal links and links to external pages - can be done as part of the build process or a separte process.</p> <p>Ensures that references remain accurate and functional, improving user experience and maintaining credibility.</p>"},{"location":"glossary/#microsim","title":"MicroSim","text":"<p>A small-scale, embedded interactive simulation designed to illustrate a concept interactively within educational content.</p> <p>MicroSim are a core element of intelligent interactive textbooks.</p> <p>See the MicroSims for Education Website</p>"},{"location":"glossary/#microsite","title":"MicroSite","text":"<p>A website that runs on a web server with no need for complex heavy APIs to expensive services such as a search engine.</p> <p>A small-scale, self-contained example or simulation embedded within the documentation. Allows readers to interact with or test concepts in a controlled environment for deeper understanding and hands-on learning.</p>"},{"location":"glossary/#navigation","title":"Navigation","text":"<p>In our textbooks we focus on left-side navigation systems since these are the default navigation system and they are both intuitive and familiar by our users.  Our users also tend to be using screens that are wide landscape displays.  We discourage top navigation.</p>"},{"location":"glossary/#p5js","title":"p5.js","text":"<p>The JavaScript library most commonly used to render MicroSims.</p> <p>Although there are many other JavaScript libraries that can be used, because there is a huge number of p5.js programs available for indexing by web crawlers used by generative AI tools, p5.js dominates the MicroSim ecosystems.</p> <p>Other specialized libraries such as vis.js are used for tasks such as simulating graph traversal algorithms.</p> <p>The organized structure of menus, sections, and links that guide readers through the documentation. Facilitates ease of use, enabling readers to find information efficiently.</p>"},{"location":"glossary/#quiz-management","title":"Quiz Management","text":"<p>Allow pages to contain self-assessments where the answers are hidden until the user clicks on a \"Show Answer\" control.</p> <p>Allow multiple-choice questions in a list to use the ordered-list labels A. B. C. D.</p>"},{"location":"glossary/#scaffolding","title":"Scaffolding","text":"<p>An instructional strategy where support is provided to learners at the beginning of a learning process and then gradually removed as they gain confidence and competence. </p> <p>Scaffolding allows students to build on what they already know and reach higher levels of understanding.</p>"},{"location":"glossary/#search","title":"Search","text":"<p>Create a search function as part of the build process.</p> <p>The mkdocs material theme generates a reverse index JSON file that is used to list the pages that match search keywords.</p> <p>Note that standard mkdocs search does not use embeddings and there is no way to find similar documents.</p>"},{"location":"glossary/#semantic-search","title":"Semantic Search","text":"<p>A retrieval method that interprets the contextual meaning of search terms to improve the relevance of search results.</p> <p>Intelligent textbooks frequently create embeddings for words, phrases, paragraphs and pages so you can quickly find similar content.</p>"},{"location":"glossary/#social-media-previews","title":"Social Media Previews","text":"<p>Summaries automatically generated when a webpage link is shared on social platforms, often including a title, description, and image.</p> <p>Metadata added to web pages that control how content is displayed when shared on social media platforms.</p> <p>Social media preview increases the appeal and clarity of shared links, encouraging users to engage with and disseminate the documentation.</p> <p>Social media previews can be automatically be generated by a configuration in the mkdocs.yml file.</p>"},{"location":"glossary/#table-of-contents","title":"Table of Contents","text":"<p>A structured list of document sections and headings, enabling users to locate and navigate to specific topics easily.</p>"},{"location":"glossary/#visjs","title":"Vis.js","text":"<p>A JavaScript library for rendering graph networks.</p> <p>Vis.js is used to view and edit learning graphs used by intelligent textbooks.</p> <p>A hierarchical listing of page headings and sections typically displayed in a sidebar or at the start of a page. Helps users quickly understand the scope of the content and jump directly to areas of interest.</p>"},{"location":"glossary/#website-analytics","title":"Website Analytics","text":"<p>The process of analyzing who is coming to your website, when they are visiting and what pages are being accessed.</p> <p>The mkdocs material system provides a way to integrate free Google Analytics by adding four lines to your mkdocs.yml file.</p> <p>See: Tutorial on Google Analytics</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This page describes how we built this website and some of  the rationale behind why we made various design choices.</p>"},{"location":"how-we-built-this-site/#python","title":"Python","text":"<p>MicroSims are about how we use generative AI to create animations and simulations.  The language of AI is Python.  So we wanted to create a site that could be easily understood by Python developers.</p>"},{"location":"how-we-built-this-site/#mkdocs-vs-docusaurus","title":"Mkdocs vs. Docusaurus","text":"<p>There are two main tools used by Python developers to write documentation: Mkdocs and Docusaurus.  Mkdocs is easier to use and more popular than Docusaurus. Docusaurus is also optimized for single-page applications. Mkdocs also has an extensive library of themes and plugins. None of us are experts in JavaScript or React. Based on our ChatGPT Analysis of the Tradeoffs we chose mkdocs for this site management.</p>"},{"location":"how-we-built-this-site/#github-and-github-pages","title":"GitHub and GitHub Pages","text":"<p>GitHub is a logical choice to store our  site source code and documentation.  GitHub also has a Custom GitHub Action that does auto-deployment if any files on the site change. We don't currently have this action enabled, but other teams can use this feature if they don't have the ability to do a local build with mkdocs.</p> <p>GitHub also has Issues,  Projects and releases that we can use to manage our bugs and tasks.</p> <p>The best practice for low-cost websites that have public-only content is GitHub Pages. Mkdocs has a command (<code>mkdocs gh-deploy</code>) that does deployment directly to GitHub Pages.  This was an easy choice to make.</p>"},{"location":"how-we-built-this-site/#github-clone","title":"GitHub Clone","text":"<p>If you would like to clone this repository, here are the commands:</p> <pre><code>mkdir projects\ncd projects\ngit clone https://github.com/dmccreary/microsims\n</code></pre>"},{"location":"how-we-built-this-site/#after-changes","title":"After Changes","text":"<p>After you make local changes you must do the following:</p> <pre><code># add the new files to a a local commit transaction\ngit add FILES\n# Execute the a local commit with a message about what and why you are doing the commit\ngit commit -m \"comment\"\n# Update the central GitHub repository\ngit push\n</code></pre>"},{"location":"how-we-built-this-site/#material-theme","title":"Material Theme","text":"<p>We had several options when picking a mkdocs theme:</p> <ol> <li>Mkdocs default</li> <li>Readthedocs</li> <li>Third-Party Themes See Ranking</li> </ol> <p>The Material Theme had 16K stars.  No other theme had over a few hundred. This was also an easy design decision.</p> <p>One key criterial was the social Open Graph tags so that when our users post a link to a simulation, the image of the simulation is included in the link.  Since Material supported this, we used the Material theme. You can see our ChatGPT Design Decision Analysis if you want to check our decision process.</p>"},{"location":"how-we-built-this-site/#enable-edit-icon","title":"Enable Edit Icon","text":"<p>To enable the Edit icon on all pages, you must add the edit_uri and the content.action.edit under the theme features area.</p> <pre><code>edit_uri: edit/master/docs/\n</code></pre> <pre><code>    theme:\n        features:\n            - content.action.edit\n</code></pre>"},{"location":"how-we-built-this-site/#conda-vs-venv","title":"Conda vs VENV","text":"<p>There are two choices for virtual environments.  We can use the native Python venv or use Conda.  venv is simle but is only designed for pure Python projects.  We imagine that this site could use JavaScript and other langauges in the future, so we picked Conda. There is nothing on this microsite that prevents you from using one or the other.  See the ChatGPT Analysis Here.</p> <p>Here is the conda script that we ran to create a new mkdocs environment that also supports the material social imaging libraries.</p> <pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\npip install mkdocs \"mkdocs-material[imaging]\"\n</code></pre>"},{"location":"how-we-built-this-site/#mkdocs-commands","title":"Mkdocs Commands","text":"<p>There are three simple mkdoc commands we use.</p>"},{"location":"how-we-built-this-site/#local-build","title":"Local Build","text":"<pre><code>mkdocs build\n</code></pre> <p>This builds your website in a folder called <code>site</code>.  Use this to test that the mkdocs.yml site is working and does not have any errors.</p>"},{"location":"how-we-built-this-site/#run-a-local-server","title":"Run a Local Server","text":"<pre><code>mkdocs serve\n</code></pre> <p>This runs a server on <code>http://localhost:8000</code>. Use this to test the display formatting locally before you push your code up to the GitHub repo.</p> <pre><code>mkdoc gh-deploy\n</code></pre> <p>This pushes everything up to the GitHub Pages site. Note that it does not commit your code to GitHub.</p>"},{"location":"how-we-built-this-site/#mkdocs-material-social-tags","title":"Mkdocs Material Social Tags","text":"<p>We are using the Material Social tags.  This is a work in progress!</p> <p>Here is what we have learned.</p> <ol> <li>There are extensive image processing libraries that can't be installed with just pip.  You will need to run a tool like brew on the Mac to get the libraries installed.</li> <li>Even after <code>brew</code> installs the libraries, you have to get your environment to find the libraries.  The only way I could get that to work was to set up a local UNIX environment variable.</li> </ol> <p>Here is the brew command that I ran:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>I then had to add the following to my ~/.zshrc file:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>Note that I am running on a Mac with Apple silicon.  This means that the image libraries that brew downloads must be specific to the Mac Arm instruction set.</p> <ul> <li>Cover images for blog post #4364</li> <li>Discussion on overriding the Social Card Image</li> </ul>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"mission-and-values/","title":"Mission and Values: Intelligent Textbooks Initiative","text":""},{"location":"mission-and-values/#our-mission","title":"Our Mission","text":"<p>To democratize education through the creation, maintenance, and distribution of interactive, intelligent textbooks that adapt to learners' needs, leveraging open standards, generative AI, and interactive simulations to make high-quality education accessible to all.</p>"},{"location":"mission-and-values/#our-vision","title":"Our Vision","text":"<p>A world where every learner, regardless of geography, language, gender, or socioeconomic status, has access to engaging, interactive educational content that adapts to their unique learning style, fostering curiosity and mastery through personalized learning journeys.</p>"},{"location":"mission-and-values/#core-values","title":"Core Values","text":""},{"location":"mission-and-values/#1-education-as-a-fundamental-right","title":"1. Education as a Fundamental Right","text":"<p>We believe that receiving a high-quality education is a fundamental human right, not a privilege. Our intelligent textbooks initiative strives to remove barriers to educational access by creating free, open-source learning materials that can be deployed in any learning environment.</p>"},{"location":"mission-and-values/#2-curiosity-driven-learning","title":"2. Curiosity-Driven Learning","text":"<p>We recognize curiosity as a superpower that drives authentic learning and helps children discover their areas of interest. Our textbooks are designed to spark and sustain curiosity through engaging content, thought-provoking questions, and interactive elements that encourage exploration.</p>"},{"location":"mission-and-values/#3-interactive-learning-through-microsims","title":"3. Interactive Learning Through MicroSims","text":"<p>We are committed to the integration of interactive simulations (MicroSims) as powerful learning tools that make abstract concepts concrete and engaging. These small, focused simulations allow learners to experiment, visualize concepts, and develop intuition about complex topics in ways static text cannot achieve.</p>"},{"location":"mission-and-values/#4-leveraging-ai-for-educational-equity","title":"4. Leveraging AI for Educational Equity","text":"<p>We believe that using generative AI to create textbooks and simulations can dramatically lower the cost of high-quality education while personalizing the learning experience. AI should be harnessed as a tool to augment human creativity and expertise, making excellent educational content more accessible to all.</p>"},{"location":"mission-and-values/#5-open-access-and-inclusivity","title":"5. Open Access and Inclusivity","text":"<p>Our intelligent textbooks are free to use by all students regardless of country, language, gender, or religion. We commit to creating content that is culturally responsive, multilingual, and designed with accessibility in mind, ensuring that our materials serve diverse global communities.</p>"},{"location":"mission-and-values/#6-beyond-static-knowledge-repositories","title":"6. Beyond Static Knowledge Repositories","text":"<p>While we admire Wikipedia as an example of crowdsourced knowledge, we believe educational content must go further to adapt to the needs of individual learners. Our intelligent textbooks provide customizable pathways through content, adjustable complexity levels, and interactive elements that static repositories cannot offer.</p>"},{"location":"mission-and-values/#7-community-and-collaboration","title":"7. Community and Collaboration","text":"<p>We believe in the power of shared resources and collaborative development. We are building central repositories of intelligent textbook descriptions and collections of simulations that can be quickly customized and integrated into new content, fostering a community of educational content creators.</p>"},{"location":"mission-and-values/#8-quality-first-approach","title":"8. Quality-First Approach","text":"<p>For generative AI to create excellent content, we need to begin with high-quality exemplars. We are committed to developing and curating outstanding educational resources that can serve as foundations for AI-assisted content creation, maintaining rigorous standards throughout.</p>"},{"location":"mission-and-values/#9-project-based-and-collaborative-learning","title":"9. Project-Based and Collaborative Learning","text":"<p>We believe that project-based learning and teaching students to work together are critical components of a great education. Our textbooks include collaborative projects, team challenges, and real-world applications that develop both subject matter expertise and essential soft skills.</p>"},{"location":"mission-and-values/#10-storytelling-as-pedagogy","title":"10. Storytelling as Pedagogy","text":"<p>Great textbooks intertwine compelling storytelling with descriptive content. We believe in the power of narrative to make learning memorable and meaningful, and we incorporate relevant stories, case studies, and examples that bring educational content to life.</p>"},{"location":"mission-and-values/#our-approach","title":"Our Approach","text":"<p>The Intelligent Textbooks Initiative leverages the power of modern web technologies, specifically the MkDocs-Material documentation system, to create engaging, interactive, and adaptable learning experiences. Our approach includes:</p> <ol> <li>Open Standards: Using widely adopted web standards and open-source tools to ensure longevity and accessibility</li> <li>Learning Graphs: Structuring content around knowledge graphs that map learning pathways and relationships between concepts</li> <li>MicroSims: Embedding small, focused interactive simulations that allow hands-on exploration of concepts</li> <li>AI-Enhanced Content: Using generative AI to assist in creating, adapting, and personalizing educational content</li> <li>GitHub-Based Workflow: Maintaining all content in version-controlled repositories that enable collaboration and continuous improvement</li> <li>Creative Commons Licensing: Sharing all content under open licenses that permit adaptation and reuse</li> <li>Analytics-Informed Iteration: Using usage data to continuously improve the effectiveness of our materials</li> </ol> <p>By combining these elements, we aim to transform educational content from static text to dynamic, adaptive learning experiences that meet learners where they are and guide them to where they aspire to be.</p>"},{"location":"mission-and-values/#join-our-mission","title":"Join Our Mission","text":"<p>We invite educators, developers, content creators, and learners to join us in revolutionizing educational content. Together, we can build a future where every learner has access to engaging, effective educational materials that inspire lifelong learning and unlock human potential.</p> <p>Please contact me on LinkedIn if you would like to join our project.</p> <p>Dan McCreary February 28th, 2025</p>"},{"location":"references/","title":"Site References","text":"<ol> <li>mkdocs - https://www.mkdocs.org/ - this is our tool for building the website.  It converts Markdown into HTML in the <code>site</code> directory.</li> <li>mkdocs material theme - https://squidfunk.github.io/mkdocs-material/ - this is the theme for our site.  The theme adds the user interface elements that give our site the look and feel.  It also has the features such as social cards.</li> <li>GitHub Pages - https://pages.github.com/ - this is the free tool for hosting public websites created by mkdocs</li> <li>Markdown - https://www.mkdocs.org/user-guide/writing-your-docs/#writing-with-markdown - this is the format we use for text.  It allows us to have headers, lists, tables, links and images without learning HTML.</li> <li>Deploy Mkdocs GitHub Action - https://github.com/marketplace/actions/deploy-mkdocs - this is the tool we use to automatically build our site after edits are checked in with Git.</li> <li>Git Book - https://git-scm.com/book/en/v2 - a useful book on Git.  Just read the first two chapters to learn how to check in new code.</li> <li>Conda - https://conda.io/ - this is a command line tool that keeps our Python libraries organized for each project.</li> <li>VS Code - https://code.visualstudio.com/ - this is the integrated development environment we use to mange the files on our website.</li> <li>Markdown Paste - https://marketplace.visualstudio.com/items?itemName=telesoho.vscode-markdown-paste-image - this is the VS code extension we use to make sure we keep the markdown format generated by ChatGPT.</li> </ol>"},{"location":"toc/","title":"Table of Contents","text":""},{"location":"concepts/bloom-taxonomy/","title":"Bloom Taxonomy","text":""},{"location":"concepts/learning-graph/","title":"Learning Graphs","text":"<p>Using A Directed Acyclic Graph of Concepts for intelligent textbooks.</p>"},{"location":"concepts/learning-graph/#introduction-to-learning-graphs","title":"Introduction to Learning Graphs","text":"<p>A Learning Graph is a graph-based data structure used to represent educational knowledge as a Directed Acyclic Graph (DAG) of interconnected concepts. Unlike traditional linear curricula, which often follow a rigid sequence, a Learning Graph models dependencies between concepts, allowing for personalized learning paths that adapt to the needs of individual learners.</p> <p>The DAG structure ensures that each concept builds upon prerequisite knowledge, forming a hierarchical structure where nodes represent concepts, and directed edges denote prerequisite relationships. This approach facilitates adaptive learning, curriculum optimization, and personalized education pathways.</p>"},{"location":"concepts/learning-graph/#concepts-vs-content-in-a-learning-graph","title":"Concepts vs. Content in a Learning Graph","text":"<p>One of the key distinctions in a Learning Graph is the difference between concepts and content.</p>"},{"location":"concepts/learning-graph/#concepts","title":"Concepts","text":"<ul> <li>Concepts represent abstract units of knowledge that students need to learn.</li> <li>Concepts are independent of specific instructional materials.</li> <li>Examples: \"Newton's Second Law,\" \"Photosynthesis,\" \"Graph Traversal Algorithms.\"</li> <li>Concepts are nodes in the Learning Graph.</li> </ul>"},{"location":"concepts/learning-graph/#content","title":"Content","text":"<ul> <li>Content refers to the specific learning materials that explain, illustrate, or assess a concept.</li> <li>Content includes textbooks, videos, interactive exercises, and quizzes.</li> <li>Content is associated with concepts but does not form part of the graph structure itself.</li> <li>Multiple content items can be mapped to the same concept, supporting different learning styles.</li> </ul> <p>In summary, concepts define what should be learned, while content provides the means to learn it.</p>"},{"location":"concepts/learning-graph/#the-concept-model-in-skos","title":"The Concept Model in SKOS","text":"<p>The Simple Knowledge Organization System (SKOS) is a widely used framework for modeling knowledge structures such as taxonomies, thesauri, and ontologies. SKOS provides a useful foundation for representing concepts in a Learning Graph.</p>"},{"location":"concepts/learning-graph/#key-skos-elements-relevant-to-learning-graphs","title":"Key SKOS Elements Relevant to Learning Graphs:","text":"<ul> <li>skos:Concept -- Represents an individual concept within a knowledge domain.</li> <li>skos:prefLabel -- The preferred label or name of the concept.</li> <li>skos:altLabel -- Alternative names or synonyms for the concept.</li> <li>skos:definition -- A textual definition of the concept.</li> <li>skos:broader -- Defines a more general (parent) concept.</li> <li>skos:narrower -- Defines a more specific (child) concept.</li> <li>skos:related -- Links to related concepts that are neither broader nor narrower.</li> </ul> <p>By adopting SKOS principles, a Learning Graph can maintain conceptual clarity, support interoperability with other knowledge representations, and enable automated reasoning over learning paths.</p>"},{"location":"concepts/learning-graph/#using-graph-algorithms-with-learning-graphs","title":"Using Graph Algorithms with Learning Graphs","text":"<p>Graph algorithms are essential for analyzing and deriving insights from a Learning Graph. These algorithms enable personalized learning pathways, concept dependency analysis, and recommendation systems.</p>"},{"location":"concepts/learning-graph/#key-graph-algorithms-for-learning-graphs","title":"Key Graph Algorithms for Learning Graphs","text":""},{"location":"concepts/learning-graph/#1-topological-sorting","title":"1. Topological Sorting","text":"<ul> <li>Ensures concepts are presented in the correct order, respecting prerequisite relationships.</li> <li>Used to generate valid learning sequences.</li> <li>Example: If \"Derivatives\" is a prerequisite for \"Integrals,\" topological sorting guarantees that derivatives are taught first.</li> </ul>"},{"location":"concepts/learning-graph/#2-shortest-path-algorithms-dijkstras-a","title":"2. Shortest Path Algorithms (Dijkstra's, A)*","text":"<ul> <li>Identifies the shortest learning path to a given concept.</li> <li>Helps learners reach their goals efficiently by minimizing redundant topics.</li> <li>Example: A student weak in \"Linear Algebra\" but strong in \"Calculus\" can receive a streamlined learning plan that skips unnecessary review.</li> </ul>"},{"location":"concepts/learning-graph/#3-centrality-measures-pagerank-betweenness-closeness","title":"3. Centrality Measures (PageRank, Betweenness, Closeness)","text":"<ul> <li>Determines the most foundational concepts in a subject.</li> <li>High centrality nodes are often key learning bottlenecks.</li> <li>Example: \"Algebraic Manipulation\" might have high centrality in a math curriculum, as it is a prerequisite for many advanced topics.</li> </ul>"},{"location":"concepts/learning-graph/#4-community-detection-algorithms-louvain-modularity-maximization","title":"4. Community Detection Algorithms (Louvain, Modularity Maximization)","text":"<ul> <li>Groups related concepts into clusters.</li> <li>Helps structure curricula into modular courses.</li> <li>Example: \"Mechanics\" and \"Thermodynamics\" may form distinct but related concept clusters in a physics curriculum.</li> </ul>"},{"location":"concepts/learning-graph/#5-graph-traversal-algorithms-dfs-bfs","title":"5. Graph Traversal Algorithms (DFS, BFS)","text":"<ul> <li>Used for progress tracking and exploration.</li> <li>BFS helps students explore related topics, while DFS ensures deep mastery before advancing.</li> <li>Example: A student can explore alternative paths if they struggle with a particular concept.</li> </ul>"},{"location":"concepts/learning-graph/#conclusion","title":"Conclusion","text":"<p>A Learning Graph represents an innovative approach to structuring educational knowledge. By modeling concepts as nodes in a Directed Acyclic Graph (DAG), educators and AI-driven systems can create personalized, efficient, and adaptive learning plans. The distinction between concepts and content ensures a flexible, modular approach to education. Additionally, leveraging graph algorithms enables intelligent recommendations, optimal learning pathways, and structured curriculum development.</p> <p>By integrating SKOS-based concept modeling, a Learning Graph ensures interoperability, semantic clarity, and scalability, making it a powerful tool for the future of education.</p>"},{"location":"concepts/open-educational-resources/","title":"Open Educational Resources","text":"<p>Open Educational Resources (OER) are freely accessible, openly licensed educational materials that can be used, adapted, and redistributed by anyone. They are designed to support teaching, learning, and research without the typical restrictions of traditional copyrighted educational content.</p>"},{"location":"concepts/open-educational-resources/#key-characteristics-of-oer","title":"Key Characteristics of OER:","text":"<ol> <li>Free Access -- Available at no cost to users.</li> <li>Open Licensing -- Typically licensed under Creative Commons or similar licenses, allowing modification and redistribution.</li> <li>Diverse Formats -- Can include textbooks, videos, quizzes, simulations, course modules, and full online courses.</li> <li>Customization -- Educators can adapt content to fit specific learning needs.</li> <li>Scalability -- Institutions and individuals can distribute OER widely without legal or financial barriers.</li> </ol>"},{"location":"concepts/open-educational-resources/#is-there-a-central-listing-of-oer","title":"Is There a Central Listing of OER?","text":"<p>There is no single, universally recognized central repository for OER, but several well-known platforms and organizations curate and distribute them:</p>"},{"location":"concepts/open-educational-resources/#major-oer-repositories-and-platforms","title":"Major OER Repositories and Platforms:","text":"<ol> <li>OER Commons (https://www.oercommons.org) -- A broad collection of open educational materials for various subjects and levels.</li> <li>MIT OpenCourseWare (https://ocw.mit.edu) -- Free course materials from the Massachusetts Institute of Technology.</li> <li>OpenStax (https://openstax.org) -- High-quality, peer-reviewed open textbooks.</li> <li>MERLOT (https://www.merlot.org) -- A curated collection of free learning materials.</li> <li>LibreTexts (https://libretexts.org) -- Open textbooks and learning materials in STEM, humanities, and social sciences.</li> <li>Wikibooks (https://en.wikibooks.org) -- A Wikimedia project with freely available textbooks.</li> <li>Europeana (https://www.europeana.eu) -- A European digital library that includes open educational materials.</li> <li>Creative Commons Search (https://search.creativecommons.org) -- A tool for finding openly licensed content.</li> <li>Open Education Global (https://www.oeglobal.org) -- A network promoting open education initiatives.</li> <li>UNESCO OER Platform (https://www.unesco.org/en/open-educational-resources) -- UNESCO's global effort to promote OER.</li> </ol> <p>Each of these platforms has its own focus, audience, and scope, making them valuable resources for educators, students, and institutions. Let me know if you need recommendations based on specific subjects or use cases!</p>"},{"location":"concepts/scaffolding/","title":"Scaffolding","text":"<p>Scaffolding refers to how the textbook provides structured support to help learners gradually develop their understanding of concepts, skills, and knowledge.</p>"},{"location":"concepts/scaffolding/#explanation","title":"Explanation:","text":"<p>Scaffolding is an instructional strategy where support is provided to learners at the beginning of a learning process and then gradually removed as they gain confidence and competence. This allows students to build on what they already know and reach higher levels of understanding.</p>"},{"location":"concepts/scaffolding/#specific-ways-a-textbook-might-scaffold-learning","title":"Specific ways a textbook might scaffold learning:","text":"<ol> <li>Progressive Complexity -- Concepts are introduced in a logical sequence,  starting from basic to more advanced ideas.</li> <li>Guided Examples -- The textbook includes worked-out examples  that show step-by-step solutions before asking students to attempt problems on their own.</li> <li>Prerequisite Reviews -- The textbook revisits foundational knowledge before introducing more complex topics.</li> <li>Hints &amp; Prompts -- Marginal notes, highlighted key terms, or guiding  questions help students focus on important ideas.</li> <li>Gradual Reduction of Support -- Earlier sections may provide extensive  explanations, while later sections encourage independent thinking.</li> <li>Checkpoints &amp; Self-Assessments -- Short quizzes, concept checks, or reflection  questions after sections to ensure comprehension before moving forward.</li> <li>Multiple Representations -- Use of text, diagrams, charts, and videos  to help students grasp concepts in different ways.</li> <li>Interleaved Practice -- Mixing previously learned concepts with new material  to reinforce retention and connections.</li> <li>Summaries &amp; Recaps -- Key takeaways at the end of each chapter to reinforce learning.</li> <li>Connections to Real-World Applications -- Examples and case studies that help  students relate abstract concepts to practical use.</li> </ol> <p>This question is essential because a well-designed textbook should not just present information but also help learners construct knowledge effectively  through guided progression and support.</p>"},{"location":"prompts/discord-admin/","title":"Discord Admin","text":"<p>Prompt</p> <p>I am a total rookie at running a Discourd server for a great group of people that are working together to build intelligent textbooks using Learning Graphs.  What suggestions do you have for me to setup a great Discord site for these wonderful people from around the world?</p>"},{"location":"prompts/discord-admin/#response","title":"Response","text":"<p>I'll help you create a comprehensive Discord server structure that caters to an international community focused on intelligent textbooks and learning graphs. Based on the context from your documents, I'll provide specific recommendations.</p> <p>Here's a suggested server structure and tips:</p>"},{"location":"prompts/discord-admin/#channel-categories-and-channels","title":"Channel Categories and Channels:","text":""},{"location":"prompts/discord-admin/#1-welcome-information","title":"1.  Welcome &amp; Information","text":"<ul> <li>welcome - Server rules and introduction</li> <li>announcements - Important updates</li> <li>introductions - Where new members can introduce themselves</li> <li>resources - Pinned links to key documentation and tools</li> </ul>"},{"location":"prompts/discord-admin/#2-project-discussion","title":"2.  Project Discussion","text":"<ul> <li>learning-graphs - Discussions about concept and learning graph development</li> <li>microsims - Channel for sharing and discussing p5.js simulations</li> <li>markdown-help - Support for markdown formatting questions</li> <li>mkdocs-material - Technical discussion about the Material theme implementation</li> <li>semantic-search - Discussions about embeddings and search implementations</li> </ul>"},{"location":"prompts/discord-admin/#3-technical-support","title":"3.  Technical Support","text":"<ul> <li>build-issues - Help with automatic builds and GitHub Actions</li> <li>analytics-questions - Support for implementing website analytics</li> <li>accessibility - Discussions about making content accessible globally</li> </ul>"},{"location":"prompts/discord-admin/#4-content-creation","title":"4.  Content Creation","text":"<ul> <li>glossary-development - Collaborative work on terminology (based on your detailed glossary)</li> <li>admonitions - Sharing best practices for using call-outs</li> <li>textbook-reviews - Peer review and feedback on content</li> </ul>"},{"location":"prompts/discord-admin/#5-international-collaboration","title":"5.  International Collaboration","text":"<ul> <li>timezone-coordination - Help members coordinate across time zones</li> <li>translations - Discussion of content localization</li> <li>regional-hubs - Sub-channels for different geographical regions</li> </ul>"},{"location":"prompts/discord-admin/#server-management-tips","title":"Server Management Tips:","text":"<ol> <li> <p>Set up roles based on expertise:</p> </li> <li> <p>Learning Graph Expert</p> </li> <li>MicroSim Developer</li> <li>Content Creator</li> <li>Technical Support</li> <li> <p>Translation Contributor</p> </li> <li> <p>Create a bot that can:</p> </li> <li> <p>Automatically welcome new members</p> </li> <li>Provide quick references to glossary terms</li> <li> <p>Help with markdown formatting</p> </li> <li> <p>Regular Community Engagement:</p> </li> <li> <p>Host monthly show-and-tell sessions for new microsims</p> </li> <li>Schedule \"office hours\" across different time zones</li> <li> <p>Create weekly challenges for content creation</p> </li> <li> <p>Documentation:</p> </li> <li> <p>Pin important messages in each channel</p> </li> <li>Maintain an up-to-date FAQ</li> <li>Create guides for common workflows</li> </ol>"},{"location":"prompts/feature-mapping/","title":"Feature Mapping","text":""},{"location":"prompts/feature-mapping/#sample-prompt","title":"Sample Prompt","text":"<p>Prompt</p> <p>I have an new online textbook I would like to create with the mkdocs website build tool.  I am also using the material theme.</p> <p>Can you tell me what features I should use to do the following functions?</p> <p>If you find a function, please provide a sample of how the mkdocs.yml file would be configured to use this function.</p> <p>Here are the functions I would like to have in my online textbook:</p> <ul> <li>Powerful and easy to use Search</li> <li>Site Navigation</li> <li>MicroSims - adding interactive simulations to any page using p5.js or iframes</li> <li>Glossary of Terms</li> <li>Table of Contents</li> <li>Link CHecker</li> <li>Social Media Previews</li> <li>Rendering Formulas</li> <li>Code Highlighting</li> <li>License Management with a link to the license in the footer of each page</li> <li>Site Analytics with Google Analytics</li> </ul>"},{"location":"prompts/feature-mapping/#response","title":"Response","text":"<p>Certainly! Below is a detailed guide on how to implement each of the functions you've listed  in your MkDocs project using the Material theme. I've included sample <code>mkdocs.yml</code> configurations and explanations for each feature.</p>"},{"location":"prompts/feature-mapping/#1-powerful-and-easy-to-use-search","title":"1. Powerful and Easy-to-Use Search","text":"<p>Feature: Enhanced search functionality with search term highlighting and suggestions.</p> <p>Configuration:</p> <pre><code>theme:\n  name: material\n  features:\n    - search.highlight   # Highlights search terms in the results\n    - search.suggest     # Provides search suggestions as you type\n\nextra:\n  search:\n    language: 'en'       # Specify language for better search indexing\n</code></pre> <p>Explanation:</p> <ul> <li>The Material theme enhances the default MkDocs search using Lunr.js.</li> <li>Enabling <code>search.highlight</code> and <code>search.suggest</code> improves the user experience.</li> <li>Setting the search language optimizes indexing and results for your audience.</li> </ul>"},{"location":"prompts/feature-mapping/#2-site-navigation","title":"2. Site Navigation","text":"<p>Feature: Organized navigation structure for easy content access.</p> <p>Configuration:</p> <pre><code>nav:\n  - Home: index.md\n  - Introduction: introduction.md\n  - Chapters:\n      - Chapter 1: chapters/chapter1.md\n      - Chapter 2: chapters/chapter2.md\n  - Glossary: glossary.md\n</code></pre> <p>Explanation:</p> <ul> <li>The <code>nav</code> section defines the structure of your site's navigation menu.</li> <li>Organize content hierarchically for intuitive access.</li> <li>Group related pages under nested sections.</li> </ul>"},{"location":"prompts/feature-mapping/#3-microsims-interactive-simulations-with-p5js-or-iframes","title":"3. MicroSims - Interactive Simulations with p5.js or iframes","text":"<p>Feature: Embed interactive simulations directly into your pages.</p> <p>Configuration:</p> <p>No specific <code>mkdocs.yml</code> configuration is required for this feature.</p> <p>Markdown Usage:</p> <pre><code>&lt;iframe src=\"path/to/your/sketch.html\" width=\"600\" height=\"400\"&gt;&lt;/iframe&gt;\n</code></pre> <pre><code>&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  // Your p5.js code here\n&lt;/script&gt;\n</code></pre> <p>Explanation:</p> <ul> <li>MkDocs allows raw HTML in Markdown files by default.</li> <li>You can embed simulations using <code>&lt;iframe&gt;</code> or include scripts directly.</li> <li>Ensure that security settings allow embedding scripts if including JavaScript directly.</li> </ul>"},{"location":"prompts/feature-mapping/#4-glossary-of-terms","title":"4. Glossary of Terms","text":"<p>Feature: Define terms and provide tooltips or a dedicated glossary page.</p> <p>Configuration:</p> <pre><code>markdown_extensions:\n  - abbr                # Supports abbreviations with tooltips\n</code></pre> <p>Markdown Usage:</p> <pre><code>The HTML specification is maintained by the W3C.\n\n*[HTML]: HyperText Markup Language\n*[W3C]: World Wide Web Consortium\n</code></pre> <p>Explanation:</p> <ul> <li>The <code>abbr</code> extension enables abbreviation definitions with hover-over tooltips.</li> <li>Alternatively, create a <code>glossary.md</code> page and link terms to it.</li> </ul>"},{"location":"prompts/feature-mapping/#5-table-of-contents","title":"5. Table of Contents","text":"<p>Feature: Automatically generated table of contents for each page.</p> <p>Configuration:</p> <pre><code>theme:\n  name: material\n  features:\n    - toc.integrate      # Integrates TOC into the page content\n\nmarkdown_extensions:\n  - toc:\n      permalink: true    # Adds permalinks to headings\n</code></pre> <p>Explanation:</p> <ul> <li>The <code>toc.integrate</code> feature embeds the table of contents within the page.</li> <li>The <code>toc</code> extension generates the TOC based on headings in your Markdown files.</li> </ul>"},{"location":"prompts/feature-mapping/#6-link-checker","title":"6. Link Checker","text":"<p>Feature: Automatically check for broken internal and external links.</p> <p>Configuration:</p> <pre><code>plugins:\n  - search\n  - link-checker:\n      timeout: 5\n      retries: 2\n      crawl: false       # Set to true to check external links\n</code></pre> <p>Explanation:</p> <ul> <li>The <code>link-checker</code> plugin scans your site for broken links during the build process.</li> <li>Configure <code>crawl</code> to <code>true</code> if you want to check external links as well.</li> <li>Adjust <code>timeout</code> and <code>retries</code> as needed.</li> </ul>"},{"location":"prompts/feature-mapping/#7-social-media-previews","title":"7. Social Media Previews","text":"<p>Feature: Generate rich previews when your site is shared on social media platforms.</p> <p>Configuration:</p> <pre><code>extra:\n  social:\n    image: images/social_preview.png    # Path to your preview image\n    description: \"An engaging description of your textbook.\"\n\nplugins:\n  - meta\n</code></pre> <p>Markdown Usage (at the top of each page if needed):</p> <pre><code>---\ntitle: \"Page Title\"\ndescription: \"Page-specific description for social media.\"\nimage: \"images/page_specific_preview.png\"\n---\n</code></pre> <p>Explanation:</p> <ul> <li>Set global social media preview settings under <code>extra</code>.</li> <li>Use the <code>meta</code> plugin to allow per-page metadata overrides.</li> <li>Ensure your preview images meet the recommended dimensions for social platforms (e.g., 1200x630 pixels for Facebook).</li> </ul>"},{"location":"prompts/feature-mapping/#8-rendering-formulas","title":"8. Rendering Formulas","text":"<p>Feature: Display mathematical formulas using KaTeX.</p> <p>Configuration:</p> <pre><code>markdown_extensions:\n  - pymdownx.arithmatex:\n      inline_syntax: ['$', '$$']   # Define inline and block delimiters\n      generic: true\n\nextra_javascript:\n  - https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js\n  - https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js\n\nextra_css:\n  - https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css\n</code></pre> <p>Explanation:</p> <ul> <li>The <code>pymdownx.arithmatex</code> extension enables LaTeX-style math rendering.</li> <li>Include KaTeX scripts and stylesheets via <code>extra_javascript</code> and <code>extra_css</code>.</li> <li>Use <code>$...$</code> for inline math and <code>$$...$$</code> for display math in your Markdown files.</li> </ul>"},{"location":"prompts/feature-mapping/#9-code-highlighting","title":"9. Code Highlighting","text":"<p>Feature: Syntax highlighting for code blocks.</p> <p>Configuration:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences   # Enhanced code block handling\n\ntheme:\n  name: material\n  codehilite:\n    guess_lang: false\n    linenums: true         # Adds line numbers to code blocks\n</code></pre> <p>Explanation:</p> <ul> <li> <p>The <code>pymdownx.superfences</code> extension provides advanced code block features.</p> </li> <li> <p>Set <code>linenums</code> to <code>true</code> to display line numbers.</p> </li> <li> <p>Specify the language in code blocks for accurate syntax highlighting:</p> </li> </ul> <pre><code>```python\ndef hello_world():\n    print(\"Hello, world!\")\n</code></pre> <pre><code>* * * *\n\n### **10. License Management with Footer Link**\n\n**Feature:** Display a license notice with a link in the footer of each page.\n\n**Configuration:**\n\n```yaml\nextra:\n  legal:\n    license:\n      name: 'Creative Commons Attribution-NonCommercial 4.0 International License'\n      url: 'https://creativecommons.org/licenses/by-nc/4.0/'\n</code></pre> <p>Explanation:</p> <ul> <li>Use the <code>extra</code> configuration to add custom data.</li> <li>The Material theme can be customized to display this information in the footer.</li> <li>You may need to create or modify a custom footer template to include the license link.</li> </ul> <p>Custom Footer Template (Optional):</p> <p>Create a file named <code>partials/footer.html</code> in your <code>overrides</code> directory with the following content:</p> <pre><code>{% if config.extra.legal.license %}\n  &lt;div class=\"md-footer-legal\"&gt;\n    &lt;a href=\"{{ config.extra.legal.license.url }}\"&gt;{{ config.extra.legal.license.name }}&lt;/a&gt;\n  &lt;/div&gt;\n{% endif %}\n</code></pre> <p>And update your <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: material\n  custom_dir: overrides   # Point to your overrides directory\n</code></pre>"},{"location":"prompts/feature-mapping/#11-site-analytics-with-google-analytics","title":"11. Site Analytics with Google Analytics","text":"<p>Feature: Track site usage with Google Analytics.</p> <p>Configuration (for GA4):</p> <pre><code>extra:\n  analytics:\n    provider: google\n    property: G-XXXXXXXXXX   # Replace with your GA4 Measurement ID\n</code></pre> <p>Explanation:</p> <ul> <li>The Material theme supports Google Analytics 4 (GA4) natively.</li> <li>Set the <code>provider</code> to <code>google</code> and provide your <code>property</code> ID.</li> <li>This injects the necessary tracking code into your site's pages.</li> </ul> <p>Additional Notes:</p> <ul> <li>Plugins: Ensure all plugins used are installed via <code>pip</code>. For example:</li> </ul> <pre><code>pip install mkdocs-material pymdown-extensions mkdocs-link-checker\n</code></pre> <ul> <li> <p>Security: Be cautious when embedding scripts or iframes. Ensure they come from trusted sources to maintain site security.</p> </li> <li> <p>Documentation: Refer to the MkDocs Material documentation for more details and advanced configurations.</p> </li> </ul> <p>By configuring your <code>mkdocs.yml</code> file as shown and utilizing the provided Markdown syntax, you should be able to implement all the desired features in your online textbook. Let me know if you need further assistance with any of these steps!</p>"},{"location":"prompts/generate-cover-image/","title":"Generate Cover Image","text":"<p>Prompt</p> <p>Please create an image for the following website.  Do not place any text in the image.</p> <p>This website is part of a series of resources to help teachers from around the world create the foundation for free and open intelligent textbooks.</p> <p>There are many ways to store intelligent textbooks on a website. Many of our teachers don't want to pay a hosting service for hosting their content. Since GitHub Pages is free, we focussed on GitHub Pages publishing tools that support Markdown, code highlighting and equations on GitHub.</p> <p>When we gave ChatGPT the following requirements:</p> <ul> <li>Content is stored in Markdown format</li> <li>Easy publishing to GitHub pages</li> <li>Ability to format code</li> <li>Ability to format equations</li> <li>Here is the summary of ChatGPT's recommendation:</li> </ul> <p>MkDocs with the Material Theme is the most aligned with your requirements due to its simplicity, robust features, and ease of deployment to GitHub Pages. It handles code highlighting and mathematical formulas gracefully and has a straightforward configuration process.</p> <p>We have also found the mkdocs-material support extremely good, with our questions often being answered within hours.</p> <p>Because of the close match of mkdocs-material's features with our intelligent textbook requirements, we have created about 20 sample websites that test these tools. We have also found that mkdocs-material can be quickly extended to support the features we need in advanced intelligent textbooks.</p> <p>Note that these tools generate a 2.9 level intelligent textbook. THis is up to but does not include personalization to the knowledge of the student. This gets your textbook ready to move to level 3, where a knowledge graph of what concepts they are aware of are used to generate personalized content.</p> <p>We hope the glossary and tutorials we provide are useful.</p>"},{"location":"prompts/generate-cover-image/#result","title":"Result","text":""},{"location":"prompts/generate-logo/","title":"Generate a Logo and Favicon","text":"<p>In this section we will walk through the steps to create a logo for the book and use this logo as the favicon for the website.</p>"},{"location":"prompts/generate-logo/#prompt","title":"Prompt","text":"<p>Prompt</p> <p>Please generate a minimalistic image of a orange book with the lowercase letter \"i\" on it.  Use blue for the background.</p>"},{"location":"prompts/generate-logo/#response","title":"Response","text":""},{"location":"prompts/generate-logo/#adding-logo-to-the-mkdocsyml","title":"Adding Logo to the Mkdocs.yml","text":"<pre><code>theme:\n  name: material\n  extra_css:\n    - styles/custom.css\n  logo: img/logo.png\n  favicon: img/favicon.ico\n</code></pre>"},{"location":"prompts/generate-logo/#generating-additional-favicon-files","title":"Generating Additional Favicon Files","text":"<p>I use a website called favicon.io which has a free tool called Favicon Converter.</p> <p>https://favicon.io/favicon-converter/</p> <p>I just drag the logo to that site and click the \"download\" button.</p> <p>This will generate a zip file with different sizes of the icons for the book in both png and icon formats.</p> <ul> <li>android-chrome-192x192.png</li> <li>android-chrome-512x512.png</li> <li>apple-touch-icon.png</li> <li>favicon-16x16.png</li> <li>favicon-32x32.png</li> <li>favicon.ico</li> <li>site.webmanifest</li> </ul> <p>We only need a single file called favicon.ico.  Place this file in the docs/img directory.</p> <p>The other files can also be copied with the exception of the site.webmanifest file. I often rename them using the logo-Widthxheight.png format.</p> <p>So for example, the <code>apple-touch-icon.png</code> file is renamed <code>logo-180x180.png</code>.</p> <p>I typically rename the android-chrome-192x192.png to be site-logo-192x192.png.</p>"},{"location":"prompts/generate-logo/#css-for-the-logo-in-the-upper-left","title":"CSS for the Logo in the Upper Left","text":"<pre><code>.md-header__button.md-logo {\n    margin: 0;\n    padding: 0;\n}\n.md-header__button.md-logo img, .md-header__button.md-logo svg {\n    height: 50px;\n    width: 50px;\n}\n</code></pre>"},{"location":"prompts/level-questions/","title":"Intelligent Textbook Level Questions","text":"<p>We need an objective that would allow a instructor or a student to assess the \"level\" of an intelligent textbook.  Here is a set of prompts that will generate the questions for this assessment and then the HTML form that can be used to score the question results.  The result of the questions is a web form with JavaScript that will return a score of 1-5 for a textbook.</p>"},{"location":"prompts/level-questions/#prompt","title":"Prompt","text":"<p>Prompt</p> <p>I am working on a project to help educators and students evaluate the score of an intelligent textbook.  We have developed the following \"Bands\" for general scoring, but I would like you to help generate a series of questions to help a specific textbook be assigned to a level.</p> <p>So please generate a list of 20 questions that would be used to assign the level of a textbook.  For each question, generate rules that would discriminate the levels.  Use questions that have the ability to discriminate each level.</p> <p>Here is a list of the levels:</p> <p>Level 0 - A printed textbook.  Give a higher score to a textbook that has a high quality table of contents, index, glossary and detailed annotated biography for students that want to learn more.</p> <p>Level 1 - An online PDF or PPT of a textbook.  Give a slightly higher score to versions that have high-quality search and many internal and external links.</p> <p>Level 2 - A website with rich media including videos, animations and simulations but no personalization.  Give a higher score to great navigation, deep links, great animations and simulations and a tools like linked word clouds, concept graphs and FAQ.  Level 2 books are not personalized with any student-spcific information.</p> <p>Level 3 - A website that is connected to a learning management systems that has knowledge of each person's current knowledge about concepts and learning goals</p> <p>Level 4 - A website that includes a conversational interface such as a chatbot.  The chabot can answer questions given your personal knowledge.  It can also recommend content for a topic.</p> <p>Level 5 - A fully intelligent textbook that can answer questions, suggest learning paths and provide detailed recommendations for content.  It uses reinforcement learning to continually learn about what learning paths work for students.  It can also generate customized lesson plans and generate new animations and simulations of the real world on demand.</p>"},{"location":"prompts/level-questions/#response","title":"Response","text":"<p>Below is a set of 20 questions designed to help determine the \"intelligence\" level of a textbook according to the given bands. Each question focuses on a feature or capability that differentiates one level from another. For each question, there are guidelines on how the presence, quality, or sophistication of that feature might map to one of the six levels (0 to 5).</p> <p>Key to Levels:</p> <ul> <li>Level 0: Printed textbook (High-quality static reference tools)</li> <li>Level 1: Online PDF/PPT (Basic digital format, possibly with search and simple links)</li> <li>Level 2: Website with rich media (videos, animations, simulations, interactive navigation), but no personalization</li> <li>Level 3: Website integrated with an LMS (knows students' progress/concepts)</li> <li>Level 4: Website with a conversational interface (chatbot) that uses personal knowledge</li> <li>Level 5: Fully intelligent textbook (suggesting paths, reinforcement learning, generating new content/visualizations on demand)</li> </ul>"},{"location":"prompts/level-questions/#1-table-of-contents-index-glossary-quality","title":"1. Table of Contents, Index, Glossary Quality","text":"<p>Question: How comprehensive and well-structured are the textbook's table of contents, index, and glossary?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0: Detailed, well-formatted table of contents, index, and glossary present in a print textbook.</li> <li>Level 1+: Basic digital TOC and glossary may be present, but does not surpass the printed quality.</li> <li>If the textbook excels only in static reference quality (no interactivity), it's likely Level 0.</li> </ul>"},{"location":"prompts/level-questions/#2-availability-of-digital-format-and-simple-search","title":"2. Availability of Digital Format and Simple Search","text":"<p>Question: Is the textbook available in a digital format with a basic keyword search function?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0: Not available digitally, or only as a scanned static PDF without search.</li> <li>Level 1: Available as a digital PDF or PPT with basic keyword search, possibly simple internal links.</li> <li>Higher levels also have digital formats, but if only a basic search is present (no personalization, no rich media), Level 1 is indicated.</li> </ul>"},{"location":"prompts/level-questions/#3-presence-and-quality-of-hyperlinks-internal-and-external","title":"3. Presence and Quality of Hyperlinks (Internal and External)","text":"<p>Question: Does the resource contain clickable links that connect to related sections or external references?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0: No hyperlinks (print only).</li> <li>Level 1: Has basic hyperlinks (e.g., from a digital PDF's table of contents to chapters).</li> <li>Level 2+: Enhanced hyperlinking including deep internal cross-references and external resource links is common, but if only simple links are present, that suggests Level 1.</li> </ul>"},{"location":"prompts/level-questions/#4-inclusion-of-rich-media-videos-animations-simulations","title":"4. Inclusion of Rich Media (Videos, Animations, Simulations)","text":"<p>Question: Does the resource integrate videos, animations, or simulations directly into the learning material?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-1: No embedded rich media, or only static images.</li> <li>Level 2: Multiple embedded videos, animations, simulations that support the text.</li> <li>Level 3-5: Will also have rich media, but for discriminating Level 2, focus on presence of rich media without personalization.</li> </ul>"},{"location":"prompts/level-questions/#5-interactivity-and-navigational-tools","title":"5. Interactivity and Navigational Tools","text":"<p>Question: How interactive and navigable is the resource? Does it provide advanced navigation tools like concept maps, word clouds, or FAQ sections?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-1: Limited to simple linear navigation (page turning, basic scroll).</li> <li>Level 2: Offers concept graphs, linked word clouds, advanced FAQ pages, and dynamic navigation menus.</li> <li>Level 3-5: Similar navigation exists, but the presence of personalization or intelligence must be examined in other questions.</li> </ul>"},{"location":"prompts/level-questions/#6-personalization-or-adaptation-of-content","title":"6. Personalization or Adaptation of Content","text":"<p>Question: Does the textbook adapt its content based on an individual student's learning profile, prior knowledge, or assessment data?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: No personalization; same content for all users.</li> <li>Level 3: Content or navigation adjusts based on student progress data from an LMS.</li> <li>Level 4-5: Personalized recommendations or conversation-based personalization is evident.</li> </ul>"},{"location":"prompts/level-questions/#7-integration-with-learning-management-systems-lms","title":"7. Integration with Learning Management Systems (LMS)","text":"<p>Question: Is the textbook integrated with an LMS to track individual learner progress and adjust experiences?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: No LMS integration.</li> <li>Level 3: Integrated with LMS, uses learner data to guide content selection.</li> <li>Level 4-5: LMS integration plus more advanced, intelligent personalization or conversational interfaces.</li> </ul>"},{"location":"prompts/level-questions/#8-ability-to-assess-student-knowledge","title":"8. Ability to Assess Student Knowledge","text":"<p>Question: Does the textbook include quizzes, assessments, or tools that adapt based on the student's performance?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-1: No adaptive assessment---may only offer static questions at the end of chapters.</li> <li>Level 2: Possibly interactive quizzes, but not adaptive based on user profile.</li> <li>Level 3: Adaptive assessments informed by LMS data.</li> <li>Level 4-5: Assessments dynamically adjust based on a richer student model and can suggest new paths or respond to queries conversationally.</li> </ul>"},{"location":"prompts/level-questions/#9-conversational-interface-or-chatbot-presence","title":"9. Conversational Interface or Chatbot Presence","text":"<p>Question: Is there a built-in conversational agent that can answer student questions directly?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-3: No conversational interface.</li> <li>Level 4: A chatbot that can answer questions based on personal user data and recommend relevant topics.</li> <li>Level 5: A chatbot with advanced reasoning, capable of generating entirely new content/visualizations on demand.</li> </ul>"},{"location":"prompts/level-questions/#10-ability-to-suggest-next-steps-or-learning-paths","title":"10. Ability to Suggest Next Steps or Learning Paths","text":"<p>Question: Can the textbook suggest what a student should study next based on their interactions or mastery?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: No suggestion of personalized next steps.</li> <li>Level 3: Basic suggestions informed by LMS data.</li> <li>Level 4: Conversational suggestions tailored to the user's performance.</li> <li>Level 5: Intelligent, continuously improving recommendations (reinforcement learning) that adapt learning paths dynamically.</li> </ul>"},{"location":"prompts/level-questions/#11-dynamic-content-generation","title":"11. Dynamic Content Generation","text":"<p>Question: Can the resource generate new examples, problems, or explanations on demand rather than just serving static content?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-3: Content is predefined and static.</li> <li>Level 4: Some dynamic retrieval of suitable content may occur, but primarily curated.</li> <li>Level 5: Fully dynamic content generation, including new examples, problems, and custom explanations.</li> </ul>"},{"location":"prompts/level-questions/#12-ability-to-create-custom-visualizations-or-simulations-on-demand","title":"12. Ability to Create Custom Visualizations or Simulations on Demand","text":"<p>Question: Can the textbook create new animations, simulations, or visual content in response to user queries or learning needs?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: Only preset images/videos.</li> <li>Level 3-4: Might select the best pre-existing simulations based on user need.</li> <li>Level 5: Can generate entirely new visualizations or simulations dynamically.</li> </ul>"},{"location":"prompts/level-questions/#13-reinforcement-learning-and-continuous-improvement","title":"13. Reinforcement Learning and Continuous Improvement","text":"<p>Question: Does the system use data from student interactions over time to improve its recommendations or content delivery?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-4: No true reinforcement learning capabilities. At best, these levels adapt to user profiles statically or rule-based.</li> <li>Level 5: Employs reinforcement learning to continually refine learning paths and strategies for individual and aggregated learners.</li> </ul>"},{"location":"prompts/level-questions/#14-external-resource-integration","title":"14. External Resource Integration","text":"<p>Question: Does the textbook integrate with external resources (like encyclopedias, research databases, or educational tools) in a context-aware manner?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0: Only static references or a printed bibliography.</li> <li>Level 1: Possibly static hyperlinks to external sites.</li> <li>Level 2: Rich external link integration within an interactive website.</li> <li>Level 3-5: External resources chosen or recommended based on the student's profile (increasing personalization with each higher level).</li> </ul>"},{"location":"prompts/level-questions/#15-ability-to-handle-user-inquiries-beyond-pre-defined-faq","title":"15. Ability to Handle User Inquiries Beyond Pre-Defined FAQ","text":"<p>Question: Can the textbook address student questions that aren't explicitly covered in the predefined text (e.g., open-ended queries)?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: Only predefined content, no handling of open-ended queries.</li> <li>Level 3: Might direct students to sections based on knowledge of their gaps but not truly \"answer\" novel queries.</li> <li>Level 4: Conversational agent attempts to answer new questions contextually.</li> <li>Level 5: Conversational agent with advanced reasoning and content generation responds fully and contextually, even creating new explanatory materials.</li> </ul>"},{"location":"prompts/level-questions/#16-support-for-multiple-learning-styles","title":"16. Support for Multiple Learning Styles","text":"<p>Question: Does the textbook adjust or present content to support various learning styles (visual, auditory, kinesthetic) based on the learner?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: Static presentation with some variety (images, text, videos), but not tailored to an individual's style.</li> <li>Level 3-4: Selection of content type may adjust based on user performance or preferences.</li> <li>Level 5: Dynamically generates or selects content formats best suited to the individual's learning patterns as observed and improved over time.</li> </ul>"},{"location":"prompts/level-questions/#17-integration-of-learner-profiles-goals-interests-past-performance","title":"17. Integration of Learner Profiles (Goals, Interests, Past Performance)","text":"<p>Question: Can the textbook use the learner's stated goals, interests, or performance history to prioritize or highlight certain topics?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: No user-specific profiling.</li> <li>Level 3: Basic use of learner profile from LMS (e.g., knowing which modules the student has completed).</li> <li>Level 4: Conversationally tailors suggestions and answers based on the learner's profile.</li> <li>Level 5: Sophisticated, data-driven personalization and continuous updating of learner profiles to refine suggestions.</li> </ul>"},{"location":"prompts/level-questions/#18-depth-of-internal-cross-referencing","title":"18. Depth of Internal Cross-Referencing","text":"<p>Question: Does the textbook dynamically highlight related concepts and prerequisites based on the user's current focus?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-1: Static cross-references.</li> <li>Level 2: Rich static cross-referencing with interactive concept maps.</li> <li>Level 3+: Cross-references informed by user knowledge state; the textbook might highlight the most relevant concepts for that learner.</li> <li>Level 4-5: Uses conversation or intelligence to highlight or generate links specifically tuned to individual needs.</li> </ul>"},{"location":"prompts/level-questions/#19-faq-and-trouble-shooting-adaptation","title":"19. FAQ and Trouble-Shooting Adaptation","text":"<p>Question: Are FAQs or help features adapted to the learner's known difficulties or frequently asked questions from similar users?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-2: Static FAQ sections.</li> <li>Level 3: FAQ suggestions pulled from common misunderstandings related to user's performance.</li> <li>Level 4-5: Adaptive FAQ that can expand or generate new answers in response to user input and historical data.</li> </ul>"},{"location":"prompts/level-questions/#20-generation-of-custom-lesson-plans-and-curricula","title":"20. Generation of Custom Lesson Plans and Curricula","text":"<p>Question: Can the resource create an entirely custom lesson plan or course sequence tailored to an individual's learning trajectory?</p> <p>Discrimination Rules:</p> <ul> <li>Level 0-3: Content is structured, but no custom lesson plans are generated. At best, Level 3 might reorder suggestions from a fixed set.</li> <li>Level 4: Might recommend sequences conversationally, but still largely draws from predefined options.</li> <li>Level 5: Fully generates personalized lesson plans and sequences dynamically, informed by continual learning and reinforcement feedback loops.</li> </ul> <p>Overall Usage: By examining which level of capability applies to each question (0 through 5), an evaluator can determine the textbook's strongest match. A textbook that consistently answers in the realm of basic static features (0-1) remains at the lower levels. As it exhibits more interactivity (2), personalization and LMS integration (3), conversational capabilities (4), and finally dynamic, intelligent adaptation with generated content and reinforcement learning (5), the classification becomes clear.</p>"},{"location":"prompts/level-questions/#generate-html-form","title":"Generate HTML Form","text":"<p>Prompt</p> <p>Now create an single-page HTML form that implements these 20 questions.  Use JavaScript within the HTML file to calculate progress on the number of questions remaining and give a running total of the level. After the last question, add a \"Calculate Score\" that will calculate the \"intelligence score\" of of textbook and give an explanation of how the score was calculated.  Make the title of the page be \"Calculating Intelligence Level of A Textbook\".</p>"},{"location":"prompts/level-questions/#sample-html-form","title":"Sample HTML Form","text":"<p>Intelligent Textbook Level Questions</p> <p>Level Questions (prior version)</p>"},{"location":"prompts/quality-metrics/","title":"Generating Analytics for Intelligent Textbook Quality Metrics","text":"<p>This prompt helps us generate a Python program that generates additional quality metrics on an intelligent textbook that is stored on a website where the source is markdown.  To run the script you will need to have cloned the textbook on a local drive.</p> <p>Prompt</p> <p>We have already created python programs that do simple reporting on the counts of things like total number of markdown files, total word count, number of MicroSims and the number of terms in the glossary.</p> <p>What additional metrics can we use to measure the quality of content in a intelligent textbook?</p> <p>Please look in the project folder for the file <code>get-metrics-json.py</code> for an example of the type of metrics we are already gathering and the sample format for the JSON output of these metrics.</p>"},{"location":"prompts/quality-metrics/#response","title":"Response","text":"<p>I'll help analyze metrics for intelligent textbooks based on the provided files. Let me break this down systematically.</p> <p>From the provided files and examples, I can identify several key metrics that can help measure the quality of content in an intelligent textbook:</p>"},{"location":"prompts/quality-metrics/#1-quantitative-metrics-already-being-tracked-in-get-metrics-jsonpy","title":"1. Quantitative Metrics (already being tracked in get-metrics-json.py):","text":"<ul> <li>Markdown file count (content breadth)</li> <li>Image count (visual content)</li> <li>Word count (content depth)</li> <li>MicroSim count (interactive elements)</li> <li>Glossary term count (terminology coverage)</li> </ul>"},{"location":"prompts/quality-metrics/#2-additional-quality-metrics-to-consider","title":"2. Additional Quality Metrics to Consider:","text":"<p>*Content Structure:</p> <ul> <li>Learning graph completeness (prerequisites and dependencies mapped)</li> <li>Navigation depth and organization (from mkdocs.yml structure)</li> <li>Admonition usage (notes, warnings, tips that enhance learning)</li> <li>Quiz coverage per chapter</li> <li>Code example coverage</li> <li>Interactive element distribution</li> </ul> <p>Engagement Features:</p> <ul> <li>MicroSim complexity and interactivity levels</li> <li>Feedback mechanisms implementation</li> <li>Google Analytics integration for usage tracking</li> <li>Student progress tracking capabilities</li> <li>Practice problem availability</li> </ul> <p>Technical Quality:</p> <ul> <li>Build system completeness (proper mkdocs.yml configuration)</li> <li>Mobile responsiveness</li> <li>Accessibility compliance</li> <li>Load time performance</li> <li>Code quality in MicroSims</li> </ul> <p>Let me create a tool to help evaluate these metrics:</p> <p>Advanced Metrics Python Program</p> <p>Here is a sample report for the Graph Systems Thinking Site:</p> <pre><code># Intelligent Textbook Quality Report\n\n## Basic Metrics\n\n- Markdown Files: 47\n- Images: 25\n- Word Count: 18029\n- MicroSims: 3\n- Glossary Terms: 38\n\n## Content Structure\n\n- Navigation Depth: 1\n- Admonitions: 0\n- Code Examples: 28\n\n## Engagement Features\n\n- Microsim Complexity:\n  - Simple: 2\n  - Medium: 1\n  - Complex: 0\n- Has Analytics: False\n\n## Technical Quality\n\n- Build Config Complete:\n  - Site Name: True\n  - Theme: True\n  - Nav: True\n- Responsive Design:\n  - Mobile Navigation: False\n</code></pre> <p>This analyzer tool provides a comprehensive framework for evaluating intelligent textbooks. It measures:</p> <ol> <li> <p>Content Completeness:</p> </li> <li> <p>Proper navigation structure</p> </li> <li>Balanced distribution of content types</li> <li>Comprehensive glossary coverage</li> <li> <p>Learning graph implementation</p> </li> <li> <p>Interactive Elements:</p> </li> <li> <p>MicroSim distribution and complexity</p> </li> <li>Quiz coverage</li> <li>Practice problems</li> <li> <p>Feedback mechanisms</p> </li> <li> <p>Technical Implementation:</p> </li> <li> <p>Build system configuration</p> </li> <li>Analytics integration</li> <li>Accessibility features</li> <li>Code quality</li> </ol> <p>Would you like me to focus on any particular aspect of these metrics or help implement specific checks for any of these areas? I can also help create visualization tools to track these metrics across multiple textbooks in your collection.</p>"},{"location":"prompts/semantic-search/","title":"Semantic Search","text":"<p>Although the keyword search feature built in to mkdocs is pretty good for a microsite architecture (just hosted on a web server with no search backend), it still leaves a lot to be desired.  Here is a prompt that will get you started and building your own semantic search tool.</p> <p>Prompt</p> <p>The search features of mkdocs seem to be limited to matching keywords.  Is there a way to use embeddings to increase the quality of search?  I know we can create embeddings for each word, phrase, sentence, paragraph and page at build time.</p>"},{"location":"prompts/semantic-search/#response","title":"Response","text":"<p>ChatGPT o1-preview Thought for 17 seconds</p> <p>Yes, you can enhance MkDocs' search capabilities by incorporating embeddings to enable semantic search, which can significantly improve the relevance and quality of search results compared to traditional keyword-based approaches. While MkDocs' default search relies on keyword matching (typically using Lunr.js), integrating embeddings allows the search to understand the context and meaning behind queries and documents.</p>"},{"location":"prompts/semantic-search/#approaches-to-implement-embedding-based-search-in-mkdocs","title":"Approaches to Implement Embedding-Based Search in MkDocs","text":"<ol> <li> <p>Using Third-Party Search Services</p> <p>a. Algolia DocSearch</p> <ul> <li>Overview: Algolia's DocSearch is a popular choice for documentation sites. While it primarily uses keyword-based search, it offers advanced ranking and relevance features that can be customized to mimic some semantic capabilities.</li> <li>Setup:<ul> <li>Apply for DocSearch here.</li> <li>Follow the setup instructions to integrate it with your MkDocs site.</li> </ul> </li> <li>Pros:<ul> <li>Easy to set up with comprehensive documentation.</li> <li>Fast and reliable search experience.</li> </ul> </li> <li>Cons:<ul> <li>Primarily keyword-based; true embedding-based semantic search would require additional customization or different services.</li> </ul> </li> </ul> <p>b. Typesense</p> <ul> <li>Overview: Typesense is an open-source, typo-tolerant search engine that can be integrated with MkDocs. It supports advanced search features and can be extended for semantic search.</li> <li>Setup:<ul> <li>Host a Typesense server or use Typesense Cloud.</li> <li>Use a custom script or plugin to index your MkDocs content with embeddings.</li> <li>Integrate the search UI with your MkDocs site.</li> </ul> </li> <li>Pros:<ul> <li>Open-source with flexible deployment options.</li> <li>Supports custom ranking and relevance tuning.</li> </ul> </li> <li>Cons:<ul> <li>Requires more setup and maintenance compared to managed services.</li> </ul> </li> <li>Custom Implementation with Embeddings</li> </ul> <p>a. Generating Embeddings at Build Time</p> <ul> <li>Process:<ol> <li>Choose an Embedding Model: Utilize models like Sentence Transformers or OpenAI's embedding APIs to generate embeddings.</li> <li>Build Script Integration: Modify your MkDocs build process to include a step that processes each page (or sections within pages) to generate embeddings.</li> <li>Store Embeddings: Save the embeddings in a JSON file or another suitable format that can be accessed by the client-side search script.</li> </ol> </li> <li>Example with Python and Sentence Transformers:     <pre><code>python\nCopy code\n\n`from sentence_transformers import SentenceTransformer\nimport json\nimport os\n\nmodel = SentenceTransformer('all-MiniLM-L6-v2')  # Choose a suitable model\nembeddings = {}\n\ndocs_dir = 'docs'  # Your MkDocs docs directory\n\nfor root, dirs, files in os.walk(docs_dir):\n    for file in files:\n        if file.endswith('.md'):\n            path = os.path.join(root, file)\n            with open(path, 'r', encoding='utf-8') as f:\n                content = f.read()\n                embedding = model.encode(content).tolist()\n                page = os.path.relpath(path, docs_dir).replace('\\\\', '/')\n                embeddings[page] = embedding\n\nwith open('search_embeddings.json', 'w') as f:\n    json.dump(embeddings, f)\n`\n</code></pre></li> </ul> <p>b. Client-Side Search Interface</p> <ul> <li> <p>Embedding Computation: Computing embeddings directly in the browser is resource-intensive. Instead, consider precomputing embeddings for queries or leveraging lightweight models via WebAssembly or similar technologies.</p> </li> <li> <p>Similarity Search: Implement a similarity search mechanism (e.g., cosine similarity) to compare the query embedding with stored embeddings.</p> </li> <li> <p>Libraries:</p> <ul> <li>TensorFlow.js: For running lightweight models in the browser.</li> <li> <p>faiss.js: Though primarily for Python, alternatives for JavaScript may be needed.</p> <ul> <li>Example Workflow:</li> </ul> </li> <li> <p>User Enters Query: Capture the search query input.</p> </li> <li>Compute Query Embedding: Use a lightweight model to generate the embedding.</li> <li>Load Precomputed Embeddings: Fetch the <code>search_embeddings.json</code>.</li> <li>Compute Similarities: Calculate cosine similarities between the query embedding and document embeddings.</li> <li> <p>Display Results: Show the top N most similar documents.</p> <ul> <li>Considerations:</li> </ul> </li> <li> <p>Performance: Handling large embedding files in the browser can be slow. Optimize by limiting the number of documents or using indexing techniques.</p> </li> <li>Security: If using third-party APIs for embedding computation, ensure data privacy.</li> <li>Server-Side Search with APIs</li> </ul> </li> <li> <p>Overview: Offload the embedding computation and similarity search to a backend service or serverless functions.</p> </li> <li>Process:<ol> <li>Build Process: Generate and store embeddings as in the custom implementation.</li> <li>API Setup: Create an API endpoint that accepts search queries, computes the query embedding server-side, performs similarity search against stored embeddings, and returns the results.</li> <li>Client Integration: Modify the MkDocs frontend to send search queries to the API and display the returned results.</li> </ol> </li> <li>Pros:<ul> <li>Performance: More efficient handling of embeddings and similarity computations.</li> <li>Scalability: Easier to manage larger datasets.</li> </ul> </li> <li>Cons:<ul> <li>Infrastructure: Requires hosting and maintaining the backend service.</li> <li>Latency: Potential delays due to network requests.</li> </ul> </li> <li> <p>Leveraging MkDocs Plugins</p> </li> <li> <p>Current State: As of the latest updates, there may not be a widely-adopted MkDocs plugin specifically for embedding-based search. However, you can develop a custom plugin or adapt existing search plugins to incorporate embeddings.</p> </li> <li> <p>Developing a Custom Plugin:</p> <ul> <li>Functionality:<ul> <li>Integrate the embedding generation step into the MkDocs build process.</li> <li>Modify the search index to include embedding data.</li> <li>Enhance the frontend search script to utilize embeddings for query processing and result ranking.</li> </ul> </li> <li> <p>Resources:</p> <ul> <li>Refer to the MkDocs plugin development guide for creating custom plugins.</li> <li>Example Resources:</li> </ul> </li> <li> <p>mkdocs-material: This popular MkDocs theme offers advanced search features and might serve as a foundation for customization.</p> </li> </ul> </li> </ul> </li> </ol>"},{"location":"prompts/semantic-search/#challenges-and-considerations","title":"Challenges and Considerations","text":"<ul> <li> <p>Performance: Embedding-based search, especially on the client side, can be resource-intensive. Optimizing embedding sizes and search algorithms is crucial.</p> </li> <li> <p>Complexity: Implementing semantic search requires a good understanding of machine learning models, embedding generation, and efficient search algorithms.</p> </li> <li> <p>Hosting and Infrastructure: Depending on the chosen approach, you might need additional hosting for search services or backend APIs.</p> </li> <li> <p>Maintenance: Custom solutions may require ongoing maintenance to handle updates in models, dependencies, or MkDocs versions.</p> </li> </ul>"},{"location":"prompts/semantic-search/#conclusion","title":"Conclusion","text":"<p>While MkDocs does not natively support embedding-based search, enhancing its search functionality with embeddings is achievable through custom implementations or integrating third-party services. This enhancement can provide a more intuitive and context-aware search experience for your documentation users. Depending on your resources and technical expertise, you can choose between leveraging existing search platforms, developing a custom MkDocs plugin, or setting up a server-side search infrastructure to incorporate embeddings effectively.</p> <p>If you're looking for a more straightforward solution and don't require full semantic capabilities, consider exploring advanced configurations of existing search plugins or services that offer improved relevance without the complexity of embeddings.</p>"},{"location":"prompts/semantic-search/#additional-resources","title":"Additional Resources","text":"<ul> <li>Sentence Transformers: https://www.sbert.net/</li> <li>OpenAI Embeddings API: https://platform.openai.com/docs/guides/embeddings</li> <li>MkDocs Plugin Development: https://www.mkdocs.org/dev-guide/plugins/</li> <li>Algolia DocSearch: https://docsearch.algolia.com/</li> <li>Typesense: https://typesense.org/</li> </ul>"},{"location":"prompts/word-cloud/","title":"Generating A Word Cloud for Your Book","text":"<p>Run the Wordloud MicroSim</p> <p>Word clouds for intelligent textbooks are graphic images that display the most important concepts in a book where the size of the font is related to how frequently the concept appears in the textbook or how important the concept is in the textbook.</p> <p>Wordclouds MicroSims can be easily be generated by generative AI applications.</p> <p>Here is a sample prompt to generate a wordcloud</p>"},{"location":"prompts/word-cloud/#basic-prompt","title":"Basic Prompt","text":"<p>Prompt</p> <p>Create a list of the 50 most important terms in a course on [Course Name].  Create a single HTML file with embedded javascript using the wordcloud2 library that displays a word-cloud of these words.</p> <p>For each word or phrase, rank it on a scale of 20 to 70 with the with the most important word or phrases given a score of 70.</p>"},{"location":"prompts/word-cloud/#prompt-2-provide-the-list-of-words","title":"Prompt 2: Provide the List of Words","text":"<p>Prompt</p> <p>Given the CSV list of phrases below, create a single HTML file that uses the wordcloud2 javascript library to create a wordcloud using the weights after the column.  When the user clicks on the link allow them to go to the glossary at href=\"../glossary.md#NAME</p> <p>LABEL, WEIGHT Intelligent Textbook,70 MicroSim,65 Open Standards,60 Markdown,60 mkdocs,55 mkdocs-material,55 Theme,45 Build Process,55 mkdocs.yml,50 Navigation,50 Docs,45 Images,45 Links,45 Deep Linking,40 Search,50 Admonitions,45 Assessments,45 Footer,40 License,40 Previous and Next Page,40 Social Previews,40 Logo,30 Favicon,30 Equations,30 LaTeX,25 MathJax,25 Code Highlighting,25 Simulations,25 p5.js,40 iframe,40 Glossary,50 Table of Contents,45 Prompts,50 Open Graph,45 Preview Testing,40 Feedback Form,40 Google Analytics,50 Plugins,45 Conda,40 Python,40 Learning Graph,50 Chatbot,45 Recommendation,45 Broken Link,35 GitHub Pages,40</p>"},{"location":"prompts/word-cloud/#prompt-3-provide-the-wordlist-code","title":"Prompt 3: Provide the Wordlist Code","text":"<p>Use the following to link from the word to the glossary term:</p> <pre><code>const wordList = wordData.map(([label, weight]) =&gt; {\n    return [\n        label,\n        weight,\n        () =&gt; window.location.href = `../../glossary#${label.replace(/\\s+/g, '-').toLowerCase()}`\n    ];\n    });\n</code></pre> <p>Note that this converts the entire string to lowercase and replaces the spaces with a dash to conform to the standards used by mkdocs-material.</p>"},{"location":"prompts/learning-graph/","title":"Prompts for Generating a Learning Graph for Intelligent Textbooks","text":""},{"location":"prompts/learning-graph/02-enumerate-concepts/","title":"Enumerating Concepts","text":""},{"location":"prompts/learning-graph/02-enumerate-concepts/#prompt-1","title":"Prompt #1","text":"<p>Prompt</p> <p>I am writing a book on \"using mkdocs to create intelligent textbooks\".  I have found the following concepts to be important.  Please review this list and add other concepts that are required for a newcomer to build an intelligent textbook with mkdocs and the material theme.  Assume the audience is a high-school teacher that wants to create an online intelligent textbook but does not have a programming background.</p>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#prompt-2","title":"Prompt #2","text":"<p>Prompt</p> <p>You are an expert at generating concept lists for online training courses. I am writing a book on the topic of using mkdocs build system and the material theme to create intelligent textbooks.  I want a hands-on course that walks teachers though each of the steps to create compelling online intelligent textbooks that feature semantic search, chatbots and real-time content recommendations for customized lesson plan and MicroSim generation.</p> <p>I want you to list the 150 most important concepts in this course. Just return a simple ordered list in markdown with no other content.</p> <p>I have found the following concepts to be important. Assume the audience is a high-school teacher that wants to create an online intelligent textbook but does not have a programming background.</p> <p>Here is a list of the concepts in this course, listed roughly from the core concepts to the most advanced topics.</p> <ul> <li>intelligent textbook</li> <li>microsite</li> <li>build process</li> <li>docs directory</li> <li>mkdocs</li> <li>markdown</li> <li>markdown images</li> <li>docs/img directory</li> <li>markdown links</li> <li>deep linking</li> <li>GitHub Pages</li> <li>mkdocs material theme</li> <li>mkdocs.yml</li> <li>material features</li> <li>navigation</li> <li>navigation top</li> <li>navigation footer</li> <li>navigation options</li> <li>previous page</li> <li>next page</li> <li>logo</li> <li>favicon</li> <li>color palette</li> <li>primary color</li> <li>accent color</li> <li>content-code-copy</li> <li>content-action-edit</li> <li>screen regions</li> <li>search</li> <li>deep linking</li> <li>yml config files</li> <li>admonitions</li> <li>formatting equations</li> <li>LaTeX</li> <li>MathJax</li> <li>code highlighting</li> <li>interactive content</li> <li>simulations</li> <li>animations</li> <li>MicroSims</li> <li>iframe</li> <li>glossary</li> <li>glossary linking</li> <li>table of contents</li> <li>quizzes</li> <li>multiple-choice questions</li> <li>mk_in_html</li> <li>logo</li> <li>favicon</li> <li>CSS</li> <li>HTML</li> <li>social previews</li> <li>open graph metadata</li> <li>testing previews</li> <li>image standards</li> <li>page metadata</li> <li>social graph testing</li> <li>feedback forms</li> <li>Google Analytics</li> <li>Visual Studio Code</li> <li>VS Code Markdown plugins</li> <li>VS Code GitHub integration</li> <li>Git commands</li> <li>Conda</li> <li>Conda commands</li> <li>sematic search</li> <li>embeddings</li> <li>vector stores</li> <li>concept graph</li> <li>customized lesson plans</li> <li>chatbot</li> <li>graph database</li> <li>concept graph</li> <li>content graph</li> <li>personalization</li> <li>cookies</li> <li>data privacy</li> <li>recommendations</li> <li>cloud-based APIs</li> <li>the future of intelligent textbooks</li> </ul>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#chatgpt-o1-preview-response","title":"ChatGPT o1-Preview Response","text":"<p>Certainly! Building an intelligent textbook with MkDocs and the Material theme involves various concepts that are crucial for a smooth experience, especially for someone without a programming background. Here's a review of your list, along with additional concepts that would be beneficial for a newcomer:</p>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#additional-concepts-to-consider","title":"Additional Concepts to Consider","text":"<ol> <li> <p>Installation and Setup</p> <ul> <li>Python Installation: MkDocs requires Python. Guidance on installing Python and setting up the environment is essential.</li> <li>Pip and Package Installation: Understanding how to use <code>pip</code> to install MkDocs and other necessary packages.</li> <li> <p>Command Line Basics</p> </li> <li> <p>Terminal Usage: Basic commands for navigating directories and running MkDocs commands (<code>mkdocs serve</code>, <code>mkdocs build</code>).</p> </li> <li>Understanding the Command Prompt: For executing MkDocs-related commands.</li> <li> <p>Virtual Environments</p> </li> <li> <p>Using <code>venv</code> or Conda Environments: Isolating project dependencies to prevent conflicts.</p> </li> <li> <p>MkDocs Plugins and Extensions</p> </li> <li> <p>Installing and Configuring Plugins: Enhancing functionality with plugins like <code>mkdocs-material-extensions</code> or <code>mkdocs-macros-plugin</code>.</p> </li> <li>Search Enhancement: Improving search capabilities with plugins.</li> <li> <p>Content Organization</p> </li> <li> <p>Directory Structure Beyond <code>docs/</code>: Managing additional folders for assets like <code>docs/assets</code> or <code>docs/media</code>.</p> </li> <li>File Naming Conventions: Best practices for naming files and folders.</li> <li> <p>Advanced Markdown Usage</p> </li> <li> <p>Tables: Creating and styling tables in Markdown.</p> </li> <li>Footnotes and References: Adding supplementary information.</li> <li>Task Lists and Checkboxes: Interactive elements within content.</li> <li> <p>Multimedia Integration</p> </li> <li> <p>Embedding Videos and Audio: Including multimedia content using Markdown.</p> </li> <li>Responsive Images and Media: Ensuring media adjusts for different screen sizes.</li> <li> <p>Custom Styling</p> </li> <li> <p>Custom CSS and JavaScript: Modifying styles beyond the default theme options.</p> </li> <li>Fonts and Typography: Customizing text appearance.</li> <li> <p>Accessibility</p> </li> <li> <p>Alt Text for Images: Improving accessibility for visually impaired users.</p> </li> <li>Keyboard Navigation: Ensuring the site is navigable without a mouse.</li> <li> <p>Version Control Basics</p> </li> <li> <p>Understanding Git Concepts: Commits, branches, merging, and resolving conflicts.</p> </li> <li>Using GitHub Desktop: A user-friendly alternative to command-line Git.</li> <li> <p>Deployment Options</p> </li> <li> <p>Alternative Hosting Platforms: Using Netlify or Read the Docs for deployment.</p> </li> <li>Continuous Deployment: Setting up automated deployment pipelines.</li> <li> <p>Search Engine Optimization (SEO)</p> </li> <li> <p>Metadata Best Practices: Improving visibility in search engines.</p> </li> <li>Sitemap Generation: Helping search engines index the site.</li> <li> <p>Testing and Previewing</p> </li> <li> <p>Local Development Server: Using <code>mkdocs serve</code> to preview changes live.</p> </li> <li>Cross-Browser Testing: Ensuring the site works across different browsers.</li> <li> <p>Troubleshooting Common Issues</p> </li> <li> <p>Debugging Build Errors: Interpreting error messages and fixing issues.</p> </li> <li>Community Resources: Where to find help (MkDocs forums, Stack Overflow).</li> <li> <p>Backup and Collaboration</p> </li> <li> <p>Using GitHub for Backup: Safeguarding your work.</p> </li> <li>Collaborative Editing: Working with others on the same project.</li> <li> <p>Legal and Ethical Considerations</p> </li> <li> <p>Content Licensing: Understanding how to legally use and share content.</p> </li> <li>Privacy Policies: If collecting user data or analytics.</li> <li> <p>Analytics and Monitoring</p> </li> <li> <p>Alternative Analytics Tools: Such as Matomo or Plausible for those who prefer not to use Google Analytics.</p> </li> <li>Interpreting Analytics Data: Understanding user behavior to improve the textbook.</li> <li> <p>Internationalization</p> </li> <li> <p>Multilingual Support: Making the textbook accessible in multiple languages.</p> </li> <li>Localization Strategies: Adapting content for different regions.</li> <li> <p>Backup Strategies</p> </li> <li> <p>Regular Backups: Using services or scripts to backup your content regularly.</p> </li> <li> <p>Legal Compliance</p> </li> <li> <p>GDPR Compliance: If the site is accessible to users in the EU.</p> </li> </ul> </li> </ol>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#concepts-from-your-list-with-additional-notes","title":"Concepts from Your List with Additional Notes","text":"<ul> <li>Markdown: Emphasize learning advanced Markdown features for richer content.</li> <li>LaTeX and Equations: Provide tools or plugins that simplify the inclusion of mathematical formulas.</li> <li>Admonitions: Use for highlighting important information, tips, or warnings.</li> <li>Quizzes and Interactive Content: Introduce tools like H5P for creating interactive exercises.</li> <li>Git Commands: Simplify by using graphical interfaces if the command line is intimidating.</li> <li>Conda Commands: If using Conda, ensure that instructions are clear on managing environments.</li> </ul>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#simplifying-for-non-programmers","title":"Simplifying for Non-Programmers","text":"<ul> <li>Visual Tools: Recommend Markdown editors with live preview (e.g., Typora, Visual Studio Code with Markdown preview).</li> <li>Step-by-Step Guides: Provide detailed instructions with screenshots for each step.</li> <li>Avoid Jargon: Explain technical terms in plain language.</li> <li>Templates: Offer pre-made templates that teachers can modify.</li> </ul>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#security-best-practices","title":"Security Best Practices","text":"<ul> <li>HTTPS and SSL Certificates: Ensure the site is secure, especially if hosted outside GitHub Pages.</li> <li>Dependency Management: Keeping packages up to date to avoid security vulnerabilities.</li> </ul>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#community-and-support","title":"Community and Support","text":"<ul> <li>Joining MkDocs Communities: Forums, GitHub discussions, or local groups.</li> <li>Contributing Back: Encouraging sharing of improvements or templates with others.</li> </ul>"},{"location":"prompts/learning-graph/02-enumerate-concepts/#final-thoughts","title":"Final Thoughts","text":"<p>Building an intelligent textbook with MkDocs and the Material theme is an achievable goal for a high-school teacher without a programming background, provided they have access to clear, concise, and jargon-free resources. By expanding on the concepts you've listed and including the additional ones above, you'll create a comprehensive guide that empowers educators to create engaging and interactive online textbooks.</p>"},{"location":"prompts/learning-graph/03-dependency/","title":"Dependency List","text":"<p>Prompt</p> <p>OK, now let us focus on these 150 concepts. </p> <p>For the next step, please create a fully connected concept learning dependency graph for the concepts in this course in a new CSV file.  Learning dependancies focus on understanding what order the Concepts should be taught to a student reading a textbook.</p> <p>Here are some terms.  In the list above, each item represents a Concept. The number on each line is called the ConceptID. The label after the period in list is called the ConceptLabel. Now, please create a new CSV file that includes new information about the other concepts on which it depends before it can be understood. If a concept depends on a specific concept that is not listed, then we will need to add it as a new concept. This will help us determine the teaching order of the Concepts.</p> <p>Return the new list as a CSV file using the following format:</p> <ol> <li>The first column in the CSV file is a numeric ConceptID in the list above.</li> <li>The second column is the ConceptName.</li> <li>The third column is a pipe-delimited list of the Concept IDs that the concept depends upon.</li> </ol> <p>For example, to indicate that to understand Markdown Images you must first understand the build process and Markdown Basics we would add \"3|6\" in the new 3rd column like this:</p> <p>3,Build Process 4,Docs Directory 5,Mkdocs Setup 6,Markdown Basics 7,Markdown Images,3|6 8,Image Directory 9,Markdown Links Check your results to make sure that all concepts are connected to at least one other concept.</p> <p>Foundation Concepts are concepts that have no dependent concepts in this set. They have an empty third column.</p>"},{"location":"prompts/learning-graph/04-taxonomy/","title":"Concept Taxonomy","text":""},{"location":"prompts/learning-graph/04-taxonomy/#prompt","title":"Prompt","text":"<p>Prompt</p> <p>Next, I would like you to create a 10-classification taxonomy system to classify each Concept. For example here are some suggestions: 1. Foundation Concepts 2. Terms and Definitions 3. Mkdocs Build Process 4. Material Features</p>"},{"location":"prompts/learning-graph/04-taxonomy/#response","title":"Response","text":"<p>Below is one possible 10-classification taxonomy system for the 150 concepts. This taxonomy is designed to broadly categorize the concepts into thematic groups that represent different aspects of creating and managing an intelligent textbook using Mkdocs and the Material theme.</p> <p>Proposed 10-Class Taxonomy:</p> <ol> <li> <p>Foundation Concepts     Core ideas, initial concepts, and baseline understandings of intelligent textbooks.</p> </li> <li> <p>Terms &amp; Definitions     Basic terminology, standard definitions, and conceptual frameworks (graphs, embeddings, etc.).</p> </li> <li> <p>Mkdocs Setup &amp; Configuration     Concepts related to installing, configuring, and organizing Mkdocs projects (directories, YAML config, build process).</p> </li> <li> <p>Material Theme &amp; UI Customization     Concepts that involve the Material theme's features, navigation structures, color palettes, and layout customization.</p> </li> <li> <p>Markdown &amp; Content Formatting     Concepts focusing on Markdown usage, linking, images, tables of contents, admonitions, and equation formatting.</p> </li> <li> <p>Interactivity &amp; Multimedia     Concepts for embedding interactive elements, multimedia content, simulations, quizzes, and MicroSims.</p> </li> <li> <p>Advanced Features &amp; Integrations     Higher-level concepts such as semantic search, embeddings, vector stores, chatbots, and concept graphs.</p> </li> <li> <p>Deployment &amp; Publishing     Concepts on hosting (GitHub Pages, custom domains), CI/CD (GitHub Actions), versioning, large media handling, multi-language support, and exporting formats.</p> </li> <li> <p>Analytics, Personalization &amp; User Experience     Concepts related to analyzing user behavior, personalizing lessons, recommendations, feedback forms, and improving engagement.</p> </li> <li> <p>Accessibility, Localization &amp; Future Outlook     Concepts that address accessibility (WCAG), assistive technologies, localization, machine translation, and future-proofing strategies.</p> </li> </ol> <p>o1</p> <p>ChatGPT can make mistakes. Check important info.</p>"},{"location":"sims/","title":"List of MicroSims for This Intelligent Textbook","text":"<p>Here is a list of MicroSims that are used in our intelligent textbooks.</p>"},{"location":"sims/#learning-graph","title":"Learning Graph","text":"<p>Learning Graph</p>"},{"location":"sims/#word-cloud","title":"Word Cloud","text":"<p>Word Cloud</p>"},{"location":"sims/#sine-wave","title":"Sine Wave","text":"<p>Sine Wave</p>"},{"location":"sims/#templates","title":"Templates","text":""},{"location":"sims/learning-graph/","title":"Learning Graph MicroSim","text":"<p>Graph Viewer</p>"},{"location":"sims/sine-wave/","title":"Sine Wave","text":"Sine Wave. <p>Run the Sine Wave Demo</p> <p>In this demo, we use three range control sliders to change  the ways a sine wave is drawn on a canvas. The three parameters are:</p> <ol> <li>amplitude</li> <li>period</li> <li>and phase</li> </ol>"},{"location":"sims/sine-wave/#prompt","title":"Prompt","text":"<pre><code>Generate a static sine wave on a grid of cartesian coordinates. \nMake (0,0) be at the center of an 600x400 canvas and larger y at the top.  \nAdd sliders for period, amplitude and phase.\nProvide the label and values to the left of the sliders.\nMake the sliders span the width less the leftSliderMargin of 100.\nDraw and label the X and Y Axis.\n</code></pre> <p>Edit This MicroSim with the P5.js Editor</p>"},{"location":"sims/sine-wave/#result","title":"Result","text":"<pre><code>// sine wave with 3 sliders\nlet width = 600;\nlet height = 400;\nlet halfWidth = width / 2\nlet halfHeight = height / 2\nlet amplitude = 100;\nlet phase = 0;\n\nlet amplitudeSlider, periodSlider, phaseSlider;\nlet labelValueMargin = 120;\n\nfunction setup() {\n  createCanvas(width, height);\n  textSize(16)\n\n  // Create sliders\n  amplitudeSlider = createSlider(0, 200, 100);\n  amplitudeSlider.position(labelValueMargin, height - 20);\n  amplitudeSlider.style('width', width - labelValueMargin + 'px')\n\n  periodSlider = createSlider(1, 100, 50);\n  periodSlider.position(labelValueMargin, height - 40);\n  periodSlider.style('width', width - labelValueMargin + 'px')\n\n  phaseSlider = createSlider(-PI*100, PI*100, 0, 0.01);\n  phaseSlider.position(labelValueMargin, height - 60);\n  phaseSlider.style('width', width - labelValueMargin + 'px')\n}\n\nfunction draw() {\n  background(240);\n\n  amplitude = amplitudeSlider.value();\n  period = periodSlider.value();\n  phase = phaseSlider.value();\n\n  // draw on the standard axis to keep text upright\n  drawAxis();\n  translate(width / 2, height / 2); // Shift origin to center\n  scale(1, -1); // Flip y-axis to make positive y up\n\n  drawSineWave(amplitude, 1/period, phase);\n}\n\nfunction setLineDash(list) {\n  drawingContext.setLineDash(list);\n}\n\nfunction drawAxis() {\n  fill('black')\n  strokeWeight(0)\n  text('y', halfWidth-20, 15)\n  text('x', width-20, halfHeight + 20)\n  stroke('gray')\n  strokeWeight(1)\n  setLineDash([5, 5])\n\n  // horizontal line\n  line(0, halfHeight, width, halfHeight)\n  // vertical line\n  line(halfWidth, 0, halfWidth, height)\n\n  stroke(0)\n  strokeWeight(0);\n  fill('black'); // Text color\n  text('Amplitude: ' + amplitude/100,    10, height - 5);\n  text('Period: '    + period,           10, height - 25);\n  text('Phase: '     + phase.toFixed(2), 10, height - 45);\n}\n\nfunction drawSineWave(amplitude, frequency, phase) {\n  stroke('blue');\n  strokeWeight(3)\n  noFill();\n  // turn off dash line\n  setLineDash([1, 0])\n  beginShape();\n    for (let x = -width / 2; x &lt; width / 2; x++) {\n      let y = amplitude * sin(frequency * (x - phase));\n      vertex(x, y);\n    }\n  endShape();\n}\n</code></pre> <p>Challenge</p> <p>Create your own trigonometry demos by drawing the cosine and tangent functions.</p>"},{"location":"sims/sine-wave/#lesson-plan","title":"Lesson Plan","text":""},{"location":"sims/sine-wave/#prompt_1","title":"Prompt","text":"<pre><code>Generate a lesson plan for a 9th grade geometry class \nthat accompanies the following p5.js demonstration:\n\nThe users see a sine wave on the screen.\nThere are three range control sliders under the sine wave.\nOne slider changes the amplitude of the sine wave.\nOne slider changes the period of the sine wave.\nOne slider changes the phase of the sine wave.\n</code></pre>"},{"location":"sims/sine-wave/#grade-level","title":"Grade Level","text":"<p>9th Grade  </p>"},{"location":"sims/sine-wave/#subject","title":"Subject","text":"<p>Geometry  </p>"},{"location":"sims/sine-wave/#duration","title":"Duration","text":"<p>1-2 class periods (40-80 minutes)  </p>"},{"location":"sims/sine-wave/#tools-needed","title":"Tools Needed","text":"<p>Computers with internet access, p5.js web editor, projector for demonstrations.</p>"},{"location":"sims/sine-wave/#objectives","title":"Objectives","text":"<ol> <li>Understand the basic properties of sine waves (amplitude, period, phase).</li> <li>Learn how to manipulate these properties using p5.js.</li> <li>Visualize the effects of changing each property on the shape of the sine wave.</li> </ol>"},{"location":"sims/sine-wave/#introduction-10-minutes","title":"Introduction (10 minutes)","text":"<ul> <li>Begin with a brief overview of sine waves and their significance in mathematics and the real world (e.g., sound waves, light waves).</li> <li>Introduce the p5.js tool and its purpose in visualizing mathematical concepts.</li> </ul>"},{"location":"sims/sine-wave/#demonstration-15-minutes","title":"Demonstration (15 minutes)","text":"<ul> <li>Project the p5.js sine wave demonstration on the screen.</li> <li>Explain each control slider and its corresponding property:</li> <li>Amplitude: Height of the wave peaks.</li> <li>Period: Distance between successive wave peaks.</li> <li>Phase: Horizontal shift of the entire wave.</li> </ul>"},{"location":"sims/sine-wave/#interactive-activity-30-minutes","title":"Interactive Activity (30 minutes)","text":"<ul> <li>Students will use the p5.js web editor to experiment with the sine wave.</li> <li>Tasks for students:</li> <li>Adjust the amplitude and observe changes.</li> <li>Modify the period and note the effects.</li> <li>Change the phase and discuss how the wave shifts.</li> <li>Encourage students to note their observations and any patterns they discover.</li> </ul>"},{"location":"sims/sine-wave/#group-discussion-10-minutes","title":"Group Discussion (10 minutes)","text":"<ul> <li>Regroup and discuss the findings.</li> <li>Ask students to explain how each parameter affects the wave.</li> <li>Discuss practical applications of sine waves.</li> </ul>"},{"location":"sims/sine-wave/#assessment-5-15-minutes","title":"Assessment (5-15 minutes)","text":"<ul> <li>Provide a short quiz or worksheet asking students to match wave diagrams with their corresponding amplitude, period, and phase settings.</li> </ul>"},{"location":"sims/sine-wave/#homework-optional","title":"Homework (optional)","text":"<ul> <li>Students create their own p5.js sketch that includes a sine wave with adjustable properties.</li> <li>They should write a brief report explaining how changing each property affects the wave and include screenshots of their sketch.</li> </ul>"},{"location":"sims/sine-wave/#extensions-optional","title":"Extensions (optional)","text":"<ul> <li>Introduce concepts of frequency and angular velocity related to sine waves.</li> <li>Explore other trigonometric functions like cosine and tangent using p5.js.</li> </ul>"},{"location":"sims/sine-wave/#resources","title":"Resources","text":"<ul> <li>Access to the p5.js web editor and basic tutorials.</li> <li>Diagrams and explanations of sine waves and their properties.</li> </ul>"},{"location":"sims/sine-wave/#references","title":"References","text":""},{"location":"sims/templates/","title":"MicroSim Templates","text":"<p>Use these templates to create a MicroSim that can be added to any website with just a single <code>iframe</code> HTML element.</p> <pre><code>&lt;iframe src=\"./mains.html\" width=\"600px\" height=\"450px\" scrolling=\"no\"\n  style=\"overflow: hidden;\"&gt;&lt;/iframe&gt;\n</code></pre> <p></p> <p>Run the Circle Radius MicroSim</p> <p>Edit this MicroSim</p>"},{"location":"sims/word-cloud/","title":"Word Cloud MicroSim","text":"<p>Run the WordCloud MicroSim</p>"},{"location":"sims/word-cloud/#adding-glossary-links","title":"Adding Glossary Links","text":"<p>We can add links from each word to the Glossary of Terms</p> <p>First, we need to turn off the link decorations in the CSS:</p> <pre><code>body {\n    font-family: Arial, Helvetica, sans-serif;\n}\n#wordcloud {\n    width: 100%;\n    height: 600px;\n    border: 1px solid #ddd;\n}\n#wordcloud a {\n    text-decoration: none;\n    color: inherit;\n}\n</code></pre> <p>Next, we add a JavaScript function to convert the links into a lower-case string with dashes used to replace spaces.</p> <pre><code>const wordList = wordData.map(([label, weight]) =&gt; {\n    return [\n        label,\n        weight,\n        () =&gt; window.location.href = `../../glossary#${label.replace(/\\s+/g, '-').toLowerCase()}`\n    ];\n});\n</code></pre>"},{"location":"tutorial/","title":"Tutorial: Building Intelligent Textbooks with mkdocs","text":"<p>This is a step-by-step tutorial on how to build intelligent textbooks with the mkdocs build tool.</p>"},{"location":"tutorial/#getting-started","title":"Getting Started","text":"<p>In our Getting Started guide we will walk you though the basic steps in creating a minimal intelligent text book with three chapters.</p> <p>This getting started guide assumes you have Python 3 installed on your local system and you have the permissions to install conda and pip.</p>"},{"location":"tutorial/#navigation","title":"Navigation","text":"<p>How to set up a left-side navigation system using mkdocs.</p> <p>Got to the Navigation Tutorial</p>"},{"location":"tutorial/#google-analytics","title":"Google Analytics","text":"<p>How to enable the Google Analytics features on mkdocs so you can track how many users are coming to your website, how often they visit, where the come from and what pages they visit.</p> <p>Go to Google Analytics</p>"},{"location":"tutorial/adding-a-microsim/","title":"Adding a MicroSim","text":"<p>In this section we show you how to add an individual p5.js MicroSim to your intelligent textbook.</p> <p>A MicroSim is a single-page simulation used to illustrate a concept in your textbook.  It is often written in JavaScript and the simulation run within a rectangular canvas that fills the center area of the page.  We design the MicroSim so that it can be easily added to any web page with a single reference such as an HTML <code>iframe</code>.</p>"},{"location":"tutorial/adding-a-microsim/#the-need-for-consistency","title":"The Need for Consistency","text":"<p>Although these guidelines might seem somewhat rigid at first, our experience has show that by forcing consistency we get much better results when we ask generative AI programs to generate new MicroSims or have generative AI customize a MicroSim.  Giving a generative AI program a well-documented sketch.js file maximizes the probability that the generative AI application or agent will generate the correct MicroSim without the need for manual interventions.</p>"},{"location":"tutorial/adding-a-microsim/#microsim-layout-strategy","title":"MicroSim Layout Strategy","text":"<p>Based on feedback from instructors, we use the following layout conventions.</p> <ol> <li>The canvas is typically around 670 pixels wide to fit in the default center section of a mkdocs material page.</li> <li>The canvas is divided into two regions.  The top region is the drawing region and the bottom region holds the controls such as sliders and buttons.</li> <li>The top drawing region is drawn with a background color of <code>aliceblue</code>.</li> <li>The bottom control have a white background.</li> <li>A JavaScript template using p5.js or vis.js is used to create a consistent layout so an iframe can be quickly inserted into any markdown page in the textbook.</li> <li>A CSS file creates a 2-pixel wide border so that the users know it is an active region that they can change simulation parameters.</li> </ol> <p>Note that these are default intelligent textbook conventions, but there is still a wide variety of options you can still use.  Some MicroSims are best used in a screen that takes the full-with of your browser.  These are easy to create by overriding the default behavior.</p>"},{"location":"tutorial/adding-a-microsim/#file-conventions","title":"File Conventions","text":"<p>There are a variety of ways you can store MicroSims based on the needs of your users.  The structure below is to promote high-quality documentation and reuse by allowing users to drag-and-drop MicroSim folders from repositories.  We also try to be consistent with the file naming conventions of the p5.js editor as shown above.</p> <ol> <li>One Directory Per MicroSim - we encourage MicroSim authors to package everything a MicroSim needs into a single folder or directory.  This allows the folder to be quickly copied by users or build tools.</li> <li>A index.md - each MicroSim should contain an index.md file.  This is the main markdown file for the MicroSim.</li> <li>A index.html file - each MicroSim contains a pure HTML file that executes the MicroSim on a canvas.  By default this is called the index.html as per the conventions in the p5.js editor</li> <li>A sketch.js file - this contains the JavaScript for the MicroSim.  This is the default name used by the p5.js editor.</li> </ol> <p>Although the p5.js editor also has a style.css file, this is seldom used by our MicroSims since much of the default CSS behavior is handled by a site-wide CSS file in our on-line textbooks.</p>"},{"location":"tutorial/adding-a-microsim/#example-of-microsim-copy-command","title":"Example of MicroSim Copy Command","text":"<p>If we stick to these conventions, you can quickly add a new MicroSim to your textbook with the following UNIX copy command with the recursive and verify options:</p> <pre><code>$ cp -rv ../microsims/docs/sims/sine-wave docs/sims\n../microsims/docs/sims/sine-wave -&gt; docs/sims/sine-wave\n../microsims/docs/sims/sine-wave/sine-wave.js -&gt; docs/sims/sine-wave/sine-wave.js\n../microsims/docs/sims/sine-wave/sine-wave.html -&gt; docs/sims/sine-wave/sine-wave.html\n../microsims/docs/sims/sine-wave/index.md -&gt; docs/sims/sine-wave/index.md\n../microsims/docs/sims/sine-wave/sine-wave.png -&gt; docs/sims/sine-wave/sine-wave.png\n</code></pre> <p>This command assumes you have checked out the MicroSims repository in a sibling directory for your textbook and you are in the home directory of your textbook.</p> <p>After you execute this command you can then modify your mkdocs.yml and your sims/index.md files to reference this MicroSim.</p>"},{"location":"tutorial/adding-a-microsim/#addition-to-mkdocsmd","title":"Addition to mkdocs.md","text":"<pre><code>- Sims:\n    - Gallery: sims/index.md\n    - Sine Wave: sims/sine-wave/index.md\n</code></pre>"},{"location":"tutorial/adding-a-microsim/#addition-to-simsindexmd","title":"Addition to sims/index.md","text":"<pre><code>## Sine Wave\n\n[Sine Wave](./sine-wave/index.md)\n</code></pre>"},{"location":"tutorial/adding-a-microsim/#iframe-reference","title":"Iframe reference","text":"<p>Now any chapter can easily include this MicroSim in their content with an HTML <code>&lt;iframe&gt;</code> reference</p> <pre><code>&lt;iframe src=\"/mkdocs-for-intelligent-textbooks/sims/sine-wave/sine-wave.html\"\n   width=\"676px\" height=\"495px\" scrolling=\"no\"&gt;&lt;/iframe&gt;\n</code></pre> <p>Note that the name of the repository must be included in the src attribute. This seems like a bug and requires a global replacement if the name of your git repository changes.</p> <p>Note that the width of the MicroSim is hard coded to be 676 pixels. This can be optimized to fill the with of the main.</p>"},{"location":"tutorial/adding-a-microsim/#connection-to-the-element","title":"Connection to the  Element","text":""},{"location":"tutorial/admonition-prompt-copy/","title":"Adding \"Copy\" to Prompt Admonitions","text":"<p>It would be wonderful if for every prompt, we could allow the user to copy that prompt directly to their pasteboard with just a single click. To do this we need to first add a JavaScript <code>event listener</code> that runs if we see an admonition of type <code>prompt</code>.  When we see this the JavaScript will add a copy button that can be clicked on. Clicking on the button will copy the entire contents of the admonition to the paste buffer. We can then move the copy button to the upper right using CSS.</p> <p>Here is what the screen will look like after we add the JavaScript:</p> <p></p> <p>After we add the CSS, the <code>copy</code> button will appear in the upper right corner of the admonition.</p> <p></p>"},{"location":"tutorial/admonition-prompt-copy/#additional-javascript","title":"Additional JavaScript","text":"<p>Here is the JavaScript:</p> <pre><code>document.addEventListener(\"DOMContentLoaded\", function () {\n    // Find all admonitions with the \"prompt\" class\n    document.querySelectorAll(\".admonition.prompt\").forEach((admonition) =&gt; {\n        // Create a \"Copy\" button\n        const copyButton = document.createElement(\"button\");\n        copyButton.textContent = \"Copy\";\n        copyButton.className = \"copy-button\";\n\n        // Append the button to the admonition\n        admonition.appendChild(copyButton);\n\n        // Add event listener for the button\n        copyButton.addEventListener(\"click\", () =&gt; {\n            // Collect all text content inside the admonition except the title and button\n            const promptText = Array.from(admonition.querySelectorAll(\"p:not(.admonition-title)\"))\n                .map((p) =&gt; p.textContent.trim())\n                .join(\"\\n\");\n\n            if (promptText) {\n                // Copy the collected text to the clipboard\n                navigator.clipboard.writeText(promptText).then(\n                    () =&gt; {\n                        // Show feedback on successful copy\n                        copyButton.textContent = \"Copied!\";\n                        setTimeout(() =&gt; (copyButton.textContent = \"Copy\"), 2000);\n                    },\n                    (err) =&gt; {\n                        console.error(\"Failed to copy text: \", err);\n                    }\n                );\n            } else {\n                console.error(\"No prompt text found to copy.\");\n            }\n        });\n    });\n});\n</code></pre>"},{"location":"tutorial/admonition-prompt-copy/#additional-css","title":"Additional CSS","text":"<pre><code>/* Styling for the Copy Button */\n.admonition.prompt {\n    position: relative;\n}\n\n.admonition.prompt .copy-button {\n  position: absolute;\n  top: 4px;\n  right: 6px;\n  background-color: #0056d6;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  padding: 0.3rem 0.3rem;\n  cursor: pointer;\n  font-size: 0.7rem;\n}\n\n.admonition.prompt .copy-button:hover {\n    background-color: #0041a4; /* Darker blue on hover */\n}\n</code></pre>"},{"location":"tutorial/admonitions/","title":"Admonitions","text":"<p>A admonition is a section of text that is seperate from the main flow. Admonitions are designed to that they can be quickly skipped over if the user is not concerned with the topic. Admontions are used to store text such as abstracts,  note, info, tip, success, question, warning, failure, danger, bug, example and quote.</p> <p>mkdocs-materail admonitions documentation</p>"},{"location":"tutorial/admonitions/#use-of-admonitions-in-intelligent-textbooks","title":"Use of Admonitions in Intelligent Textbooks","text":""},{"location":"tutorial/admonitions/#showing-the-answer","title":"Showing the Answer","text":"<pre><code>#### Definition of Degree of a Node\n\nWhat is the \"degree\" of a node in a graph?\n\n&lt;div class=\"upper-alpha\" markdown&gt;\n1. The shortest path between two nodes in the graph\n2. The total number of edges connected to the node\n3. The number of nodes directly reachable from the node\n4. The maximum number of edges any node in the graph has\n&lt;/div&gt;\n\n??? Question \"Show Answer\"\n    The correct answer is **B**. The degree of a node in a \n    graph is the total number of edges connected to that node. \n    For undirected graphs, this includes all edges, while for \n    directed graphs, it can be further classified into in-degree \n    (edges coming into the node) and out-degree (edges going\n    out of the node).\n</code></pre> <p>Rendering:</p>"},{"location":"tutorial/admonitions/#definition-of-degree-of-a-node","title":"Definition of Degree of a Node","text":"<p>What is the \"degree\" of a node in a graph?</p> <ol> <li>The shortest path between two nodes in the graph</li> <li>The total number of edges connected to the node</li> <li>The number of nodes directly reachable from the node</li> <li>The maximum number of edges any node in the graph has</li> </ol> Show Answer <p>The correct answer is B. The degree of a node in a  graph is the total number of edges connected to that node.  For undirected graphs, this includes all edges, while for  directed graphs, it can be further classified into in-degree  (edges coming into the node) and out-degree (edges going out of the node).</p>"},{"location":"tutorial/admonitions/#configuration","title":"Configuration","text":"<pre><code>markdown_extensions:\n  - admonition\n</code></pre>"},{"location":"tutorial/directory-structure/","title":"Directory Structure for Intelligent Textbooks","text":"<p>Here is our recommend file structure for an intelligent textbook. The actual names of the folders and files are mostly convention, and they can be changed as long as your <code>mkdocs.yml</code> file is also updated.</p> <p>Note that in the listing below, folders are listed before files.</p> <pre><code>project-root/\n\u251c\u2500\u2500 data/                    # Data files like the learning graph in csv and json format\n\u251c\u2500\u2500 data/learning-graph.json # Learning graph for this course in JSON format\n\u251c\u2500\u2500 data/learning-graph.csv  # Learning graph for this course in CSV format\n\u251c\u2500\u2500 docs/                    # All markdown content that is converted to HTML goes here\n\u2502   \u251c\u2500\u2500 img/                 # Images for general use\n\u2502   \u251c\u2500\u2500 img/cover.png        # Book cover\n\u2502   \u251c\u2500\u2500 img/logo.png         # Book logo for upper left corner\n\u2502   \u251c\u2500\u2500 img/favicon.ico      # Book favicon for logo in browser bookmarks\n|   \u251c\u2500\u2500 chapters/            # Directory for all textbook chapter content\n\u2502   \u2514\u2500\u2500 index.md             # Home landing page for the textbook\n\u2502   \u2502   \u251c\u2500\u2500 chapter-1/       # Directory for holding content for chapter 1\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 index.md     # Main content for chapter 1\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 fig-1.png    # Chapter 1 figure 1\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 fig-2.png    # Chapter 1 figure 2\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 index.md     # Main content for chapter 1\n\u2502   \u2502   \u251c\u2500\u2500 chapter-2/       # Directory for holding content for chapter 1\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 fig-1.png    # Chapter 2 figure 1\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 fig-2.png    # Chapter 2 figure 2\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 index.md     # Main content for chapter 2\n\u2502   \u251c\u2500\u2500 css/                 # Directory for any custom CSS files\n\u2502   \u251c\u2500\u2500 css/extra.css        # File of CSS added to each page\n\u2502   \u251c\u2500\u2500 js/                  # Custom JavaScript files\n\u2502   \u251c\u2500\u2500 js/extra.js          # File of extra Javascript for each page\n\u2502   \u251c\u2500\u2500 sims/                # Interactive simulations\n\u2502   \u2502   \u251c\u2500\u2500 sim-name-1/      # Each simulation in its own directory\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 index.md     # Documentation for the simulation\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 sketch.js    # Main simulation code (if using p5.js)\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 img/         # Simulation-specific images\n\u2502   \u2514\u2500\u2500 contact.md           # Contact name for the book\n\u2502   \u2514\u2500\u2500 feedback.md          # How users can provide feedback on this book\n\u2502   \u2514\u2500\u2500 glossary.md          # Glossary of terms\n\u2502   \u2514\u2500\u2500 index.md             # List of Chapters or Table of Contents\n\u2502   \u2514\u2500\u2500 license.md           # Creative Commons or similar license data\n\u2502   \u2514\u2500\u2500 references.md        # External references such as citations to other papers, books and articles\n\u251c\u2500\u2500 src/                     # source code including content management tools\n\u251c\u2500\u2500 mkdocs.yml               # Configuration file\n\u251c\u2500\u2500 README.md                # Repository documentation\n\u2514\u2500\u2500 requirements.txt         # Python dependencies including mkdocs-material and extensions\n</code></pre>"},{"location":"tutorial/getting-started/","title":"Getting Started Building a Intelligent Textbook with mkdocs-material","text":""},{"location":"tutorial/getting-started/#prerequisites","title":"Prerequisites","text":"<p>This getting started guide assumes you have Python installed on your local system and you have the permissions to install conda and pip.</p> <p>You can test this by typing the <code>python --version</code> command into your terminal:</p> <pre><code>$ python --version\nPython 3.13.0\n</code></pre> <p>If this does not work, we suggest using ChatGPT with the prompt:  \"How do I install Python on my Windows 11 PC?\" or similar.</p>"},{"location":"tutorial/getting-started/#sample-book-structure","title":"Sample Book Structure","text":"<p>In this getting started section we will have the following pages of our book:</p> <ol> <li>home page</li> <li>list of chapters</li> <li>chapter 1</li> <li>chapter 2</li> <li>chapter 3</li> </ol> <p>We will build a simple website with page navigation and search (turned on by default in mkdocs).</p>"},{"location":"tutorial/getting-started/#file-structure","title":"File structure","text":"<p>Here are the paths to these documents relative to the base of your GitHub repository</p> <pre><code>docs/index.md\ndocs/chapters/index.md\ndocs/chapters/chapter-1.md\ndocs/chapters/chapter-2.md\ndocs/chapters/chapter-3.md\nmkdocs.yml\n</code></pre> <p>You can find all of these files on a sample test GitHub repository here:</p> <p>https://github.com/dmccreary/i-book-v1</p>"},{"location":"tutorial/getting-started/#structure-of-the-mkdocsyml-file","title":"Structure of the mkdocs.yml file","text":"<pre><code>site_name: Mkdocs for Intelligent Textbooks\nrepo_url: 'https://github.com/YOUR_GITHUB_ID/i-book-v1'\n\nnav:\n  - Home: index.md\n  - List of Chapters:\n    - Intro: chapters/index.md\n    - Chapter 1: chapters/chapter-1.md\n    - Chapter 2: chapters/chapter-2.md\n    - Chapter 3: chapters/chapter-3.md\n\ntheme:\n  name: material\n</code></pre> <p>Note</p> <p>In the above, make sure you change YOUR_GITHUB_ID to your actual GitHub account id.</p> <p>When we finish this lesson, this will will render the following site:</p> <p></p>"},{"location":"tutorial/getting-started/#creating-a-local-build","title":"Creating a Local Build","text":"<p>We will use the conda system to create a virtual private environment for building our site. This environment will make sure the versions of libraries we need for our site will not conflict with your other Python projects.</p>"},{"location":"tutorial/getting-started/#step-1-install-conda","title":"Step 1: Install Conda","text":"<p>Follow the instructions for your computer on the anaconda website for downloading miniconda. </p> <p>https://docs.anaconda.com/miniconda/install/</p> <p>Make sure you $PATH variable has conda on it.  If not, you can setup an <code>alias</code> or use the whereis program to find the full path:</p> <pre><code>$ whereis conda\nconda: /Users/dan/miniconda3/condabin/conda\n</code></pre> <p>To test that it is installed run conda with the <code>--version</code> option:</p> <pre><code>$ conda --version\nconda 24.9.2\n</code></pre>"},{"location":"tutorial/getting-started/#step-2-create-a-python-3-virtual-environment-for-mkdocs","title":"Step 2: Create a Python 3 Virtual Environment for mkdocs","text":"<pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\n</code></pre> <p>Your prompt should now indicate that you are in the mkdocs environment:</p> <pre><code>(mkdocs) $\n</code></pre>"},{"location":"tutorial/getting-started/#step-3-install-mkdocs-and-the-mkdocs-material-libraries-with-pip","title":"Step 3: Install mkdocs and the mkdocs-material Libraries with pip","text":"<p>We will use the Python <code>pip</code> command to install the right libraries:</p> <pre><code>(mkdocs) $ pip install mkdocs mkdocs-material\n</code></pre> <p>This command will intall the latest version of the mkdocs and mkdocs-material libraries.  Alternatively, you can leverage our requirements.txt file and run the following command:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>This will make sure you get at least the minimal versions of these libraries that we tested our site with.</p> <p>Next, test that the <code>mkdocs</code> command is working:</p> <pre><code>(mkdocs) $ mkdocs --version\nmkdocs, version 1.6.1 from /Users/YOUR_LOCAL_NAME/miniconda3/envs/mkdocs/lib/python3.13/site-packages/mkdocs (Python 3.13)\n</code></pre> <p>Where YOUR_LOCAL_NAME is the name of your local account on your local filesystem.</p>"},{"location":"tutorial/getting-started/#step-4-run-the-mkdocs-build-command","title":"Step 4: Run the mkdocs build command","text":"<p>The command <code>mkdocs build</code> will read all your markdown files and convert them into HTML.  It will place all the HTML files in a directory called <code>site</code>.  You want to make sure not to check this into your GitHub main branch.  You can do this by adding site to the <code>.gitignore file</code>.  Here is an example:</p> <pre><code>site\n.DS_Store\n~$*\n</code></pre> <pre><code>(mkdocs) $ mkdocs build\nINFO    -  Cleaning site directory\nINFO    -  Building documentation to directory:\n           /Users/YOUR_LOCAL_NAME/Documents/ws/i-book-v1/site\nINFO    -  Documentation built in 0.15 seconds\n</code></pre>"},{"location":"tutorial/getting-started/#step-5-run-a-local-server","title":"Step 5: Run a Local Server","text":"<p>This command will start a local web server and put your website on it.  It will also monitor if any of the files in the docs directory change of if your mkdocs.yml file changes.  If they do change, it will regenerate the required files.</p> <pre><code>(mkdocs) $ mkdocs serve\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  Documentation built in 0.12 seconds\nINFO    -  [14:52:39] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO    -  [14:52:39] Serving on http://127.0.0.1:8000/\n</code></pre> <p>Now navigate to your localhost port 8000:</p> <p>http://localhost:8000</p> <p>You should see the first version of the book.</p>"},{"location":"tutorial/getting-started/#step-6-do-a-deploy-to-github-pages","title":"Step 6: Do a Deploy to GitHub Pages","text":"<p>Once you preview your website on your local computer you are ready to publish your new creation for the world to see!  We do this with the following command:</p> <pre><code>(mkdocs) $ mkdocs gh-deploy\n</code></pre> <pre><code>INFO    -  Cleaning site directory\nINFO    -  Building documentation to directory:\n           /Users/YOUR_LOCAL_NAME/Documents/ws/i-book-v1/site\nINFO    -  Documentation built in 0.13 seconds\nWARNING -  Version check skipped: No version specified in previous deployment.\nINFO    -  Copying '/Users/YOUR_LOCAL_NAME/Documents/ws/i-book-v1/site' to 'gh-pages' branch\n           and pushing to GitHub.\nEnumerating objects: 67, done.\nCounting objects: 100% (67/67), done.\nDelta compression using up to 10 threads\nCompressing objects: 100% (60/60), done.\nWriting objects: 100% (67/67), 577.48 KiB | 6.56 MiB/s, done.\nTotal 67 (delta 8), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (8/8), done.\nremote: \nremote: Create a pull request for 'gh-pages' on GitHub by visiting:\nremote:      https://github.com/YOUR_GITHUB_ID/i-book-v1/pull/new/gh-pages\nremote: \nTo https://github.com/YOUR_GITHUB_ID/i-book-v1.git\n * [new branch]      gh-pages -&gt; gh-pages\nINFO    -  Your documentation should shortly be available at:\n           https://YOUR_GITHUB_ID.github.io/i-book-v1/\n</code></pre> <p>Where YOUR_GITHUB_ID is your GitHub account ID.  Note that you can copy this last line from the terminal and paste it into your browser URL.</p> <p>Note that you can go to your GitHub repository and view the <code>gh-pages</code> branch.  All of your HTML pages will be there. It is important that you don't check your <code>site</code> into your main branch since this is a duplicate of the gh-pages branch. As mentioned above, <code>site</code> should be in your .gitignore file.</p>"},{"location":"tutorial/getting-started/#step-7-test-your-site","title":"Step 7: Test Your Site","text":"<p>You can now go to your site to test the deployment.  The home will be in the GitHub pages domain that ends with <code>github.io</code>.  The format is like this:</p> <p>https://YOUR_GITHUB_ID.github.io/i-book-v1/</p> <p>You can also view the template used in this tutorial here:</p> <p>https://dmccreary.github.io/i-book-v1/</p> <p>Feel free to use the GitHub fork function to make your own copy of this GitHub repo. This will save you from having to create your own directory and file structures.</p> <p>That is it!  You have now published your first Intelligent Textbook. It does have search and navigation and we will now use generative AI tools to create fantastic content.</p>"},{"location":"tutorial/google-analytics/","title":"Configuring Google Analytics","text":"<pre><code>#extra:\n#  analytics:\n#    provider: google\n#    property: G-XXXX\n</code></pre> <pre><code>extra:\n  analytics:\n    provider: google\n    property: G-XXXX\n</code></pre>"},{"location":"tutorial/google-analytics/#step-by-step","title":"Step By Step","text":""},{"location":"tutorial/google-analytics/#step-1-find-the-configure-icon","title":"Step 1 - Find the Configure Icon","text":"<p>Step 1</p>"},{"location":"tutorial/google-analytics/#step-2-find-the-create-button","title":"Step 2 - Find the Create Button","text":"<p>Step 2</p>"},{"location":"tutorial/google-analytics/#step-3-select-property","title":"Step 3 - Select Property","text":"<p>Step 3</p>"},{"location":"tutorial/google-analytics/#step-4-name-your-property","title":"Step 4 - Name Your Property","text":"<p>And give it a timezone</p> <p>Step 4</p>"},{"location":"tutorial/google-analytics/#step-5-describe-your-business","title":"Step 5 - Describe Your Business","text":"<p>Step 5</p>"},{"location":"tutorial/google-analytics/#step-6-choose-your-business-objective","title":"Step 6 - Choose Your Business Objective","text":"<p>Step 6</p>"},{"location":"tutorial/google-analytics/#step-7-find-your-google-analaytics-id","title":"Step 7 - Find Your Google Analaytics ID","text":"<p>Step 7</p>"},{"location":"tutorial/google-analytics/#step-8-copy-the-google-analytics-id-into-your-mkdocsyml-and-check-your-id","title":"Step 8 - Copy the Google Analytics ID into Your Mkdocs.yml and Check Your ID","text":"<p>After you do your next deploy, check that the tag befor the  has the Google Analytics Script.</p> <p>Use the Chrome Developer Tool to verfiy that the Google Aanalytcis Script is Being Loaded</p> <p>Step 8</p>"},{"location":"tutorial/google-analytics/#step-9-check-your-id","title":"Step 9 - Check Your ID","text":"<pre><code>extra:\n  analytics:\n    provider: google\n    property: G-D7X1XT7Z19\n</code></pre>"},{"location":"tutorial/google-analytics/#references","title":"References","text":"<p>Google Analytics Docs</p>"},{"location":"tutorial/local-build/","title":"Building Your Site Locally","text":""},{"location":"tutorial/local-build/#step-1-install-python-3","title":"Step 1: Install Python 3","text":""},{"location":"tutorial/local-build/#step-2-create-a-python-virtual-environment-with-conda","title":"Step 2: Create a Python Virtual Environment with Conda","text":""},{"location":"tutorial/local-build/#step-3-use-git-to-clone-the-textbook","title":"Step 3: Use Git to Clone the Textbook","text":""},{"location":"tutorial/local-build/#step-4-create-a-unix-alias-to-publish-new-content","title":"Step 4: Create a UNIX alias to Publish New Content","text":""},{"location":"tutorial/logging/","title":"Logging Textbook Usage","text":"<p>Intelligent textbooks offer tremendous educational possibilities, but understanding  how users interact with these resources is essential for continuous improvement.  Let's explore comprehensive logging strategies that can help you measure engagement  and optimize your intelligent textbooks.</p>"},{"location":"tutorial/logging/#using-web-analytics","title":"Using Web Analytics","text":"<p>Google Analytics provides a solid foundation for understanding basic usage patterns in your intelligent textbook sites. The mkdocs-material theme makes integration straightforward:</p>"},{"location":"tutorial/logging/#setting-up-google-analytics","title":"Setting Up Google Analytics","text":"<ol> <li> <p>Create a Google Analytics 4 Property - Sign up for a Google Analytics account if you don't already have one, and create a new property for your intelligent textbook site.</p> </li> <li> <p>Get Your Measurement ID - After setting up your property, you'll receive a measurement ID (format: G-XXXXXXXXXX).</p> </li> <li> <p>Configure mkdocs.yml - Add the following to your <code>mkdocs.yml</code> file:</p> </li> </ol> <pre><code>extra:\n  analytics:\n    provider: google\n    property: G-XXXXXXXXXX  # Replace with your actual measurement ID\n</code></pre> <p>As seen in your configuration file, you're already using the property ID <code>G-D7X1XT7Z19</code>.</p>"},{"location":"tutorial/logging/#key-metrics-to-track","title":"Key Metrics to Track","text":"<p>With Google Analytics successfully implemented, you can track:</p> <ul> <li>Page Views - Which pages are most frequently visited</li> <li>Session Duration - How long users spend on each page</li> <li>User Flow - How users navigate through your content</li> <li>Bounce Rate - The percentage of visitors who leave after viewing only one page</li> <li>Geographic Data - Where your users are located</li> <li>Device Information - What devices and browsers are being used</li> </ul>"},{"location":"tutorial/logging/#creating-custom-events","title":"Creating Custom Events","text":"<p>Beyond the default tracking, you can implement custom events to track specific interactions:</p> <pre><code>// In your js/extra.js file\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Track clicks on MicroSim launch buttons\n  const simButtons = document.querySelectorAll('.microsim-launch');\n  simButtons.forEach(button =&gt; {\n    button.addEventListener('click', function() {\n      const simName = this.getAttribute('data-sim-name');\n      gtag('event', 'launch_microsim', {\n        'sim_name': simName\n      });\n    });\n  });\n});\n</code></pre>"},{"location":"tutorial/logging/#detailed-logging","title":"Detailed Logging","text":"<p>While Google Analytics provides excellent high-level insights, intelligent textbooks benefit from more detailed logging capabilities, especially for tracking interactive elements like MicroSims and quiz interactions.</p>"},{"location":"tutorial/logging/#setting-up-a-logging-backend","title":"Setting Up a Logging Backend","text":"<ol> <li>API Endpoint Creation - Establish a simple API that can receive and store interaction events:</li> </ol> <pre><code># Example Flask backend for logging\nfrom flask import Flask, request, jsonify\nfrom flask_cors import CORS\nimport json\nimport datetime\n\napp = Flask(__name__)\nCORS(app)\n\n@app.route('/log', methods=['POST'])\ndef log_event():\n    data = request.json\n    data['timestamp'] = datetime.datetime.now().isoformat()\n\n    # Add to log file\n    with open('interaction_logs.jsonl', 'a') as f:\n        f.write(json.dumps(data) + '\\n')\n\n    return jsonify({\"success\": True})\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <ol> <li>Client-Side Implementation - Create JavaScript functions for event logging:</li> </ol> <pre><code>// In js/extra.js\nfunction logInteraction(eventType, eventData) {\n  const payload = {\n    eventType: eventType,\n    eventData: eventData,\n    page: window.location.pathname,\n    timestamp: new Date().toISOString()\n  };\n\n  fetch('https://your-logging-endpoint.com/log', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload)\n  }).catch(err =&gt; console.error('Logging error:', err));\n}\n</code></pre>"},{"location":"tutorial/logging/#microsim-specific-logging","title":"MicroSim Specific Logging","text":"<p>For MicroSims, track detailed usage patterns:</p> <pre><code>// For p5.js based MicroSims\nfunction setupMicroSimLogging(simId) {\n  // Log start time\n  const startTime = new Date();\n  logInteraction('microsim_start', {\n    simId: simId,\n    startTime: startTime.toISOString()\n  });\n\n  // Setup interval monitoring for active usage\n  let lastInteractionTime = startTime;\n  const interactionInterval = setInterval(() =&gt; {\n    // If user hasn't interacted in 2 minutes, consider session ended\n    const currentTime = new Date();\n    if (currentTime - lastInteractionTime &gt; 120000) {\n      clearInterval(interactionInterval);\n      logInteraction('microsim_end', {\n        simId: simId,\n        startTime: startTime.toISOString(),\n        endTime: lastInteractionTime.toISOString(),\n        duration: (lastInteractionTime - startTime) / 1000\n      });\n    }\n  }, 10000);\n\n  // Update last interaction time on user input\n  document.getElementById(simId).addEventListener('mousemove', () =&gt; {\n    lastInteractionTime = new Date();\n  });\n}\n</code></pre>"},{"location":"tutorial/logging/#logging-search-terms-and-questions","title":"Logging Search Terms and Questions","text":"<p>For built-in search functionality or AI chatbots integrated with your intelligent textbook:</p> <pre><code>// Log search queries\ndocument.addEventListener('DOMContentLoaded', function() {\n  const searchInput = document.querySelector('.md-search__input');\n  if (searchInput) {\n    searchInput.addEventListener('keyup', function(e) {\n      if (e.key === 'Enter') {\n        logInteraction('search_query', {\n          query: this.value\n        });\n      }\n    });\n  }\n\n  // For AI chatbot logging\n  const chatForm = document.querySelector('.chatbot-form');\n  if (chatForm) {\n    chatForm.addEventListener('submit', function(e) {\n      const userQuestion = document.querySelector('.chatbot-input').value;\n      logInteraction('chatbot_question', {\n        question: userQuestion\n      });\n    });\n  }\n});\n</code></pre>"},{"location":"tutorial/logging/#logging-user-specific-activities","title":"Logging User-Specific Activities","text":"<p>For personalized learning experiences, implementing user-specific logging provides  valuable insights into individual learning patterns.</p>"},{"location":"tutorial/logging/#anonymous-vs-authenticated-logging","title":"Anonymous vs. Authenticated Logging","text":"<p>You can implement both options:</p> <ol> <li>Anonymous Session Tracking - Use browser storage to maintain  consistency across a single user session:</li> </ol> <pre><code>// Generate anonymous user ID if not present\nlet userId = localStorage.getItem('anonymous_user_id');\nif (!userId) {\n  userId = 'anon_' + Math.random().toString(36).substring(2, 15);\n  localStorage.setItem('anonymous_user_id', userId);\n}\n\n// Include in all logging events\nfunction enhancedLogInteraction(eventType, eventData) {\n  const payload = {\n    userId: userId,\n    eventType: eventType,\n    eventData: eventData,\n    page: window.location.pathname,\n    timestamp: new Date().toISOString()\n  };\n\n  // Logging code...\n}\n</code></pre> <ol> <li>Authenticated User Tracking - For classroom or institutional settings where users log in:</li> </ol> <pre><code>// Assuming currentUser is set on login\nfunction userLogInteraction(eventType, eventData) {\n  if (!window.currentUser) return; // Don't log if not logged in\n\n  const payload = {\n    userId: window.currentUser.id,\n    username: window.currentUser.username,\n    eventType: eventType,\n    eventData: eventData,\n    page: window.location.pathname,\n    timestamp: new Date().toISOString()\n  };\n\n  // Logging code...\n}\n</code></pre>"},{"location":"tutorial/logging/#progress-tracking","title":"Progress Tracking","text":"<p>For comprehensive learning progress analysis:</p> <pre><code>// Track completion of chapters/sections\nfunction markAsCompleted(sectionId) {\n  logInteraction('section_completed', {\n    sectionId: sectionId,\n    completionTime: new Date().toISOString()\n  });\n\n  // Update UI to show completion status\n  document.querySelector(`#${sectionId} .completion-indicator`)\n    .classList.add('completed');\n}\n\n// Track quiz performance\nfunction logQuizResult(quizId, score, maxPossible) {\n  logInteraction('quiz_completed', {\n    quizId: quizId,\n    score: score,\n    maxPossible: maxPossible,\n    percentage: (score / maxPossible) * 100\n  });\n}\n</code></pre>"},{"location":"tutorial/logging/#regulatory-compliance","title":"Regulatory Compliance","text":"<p>When implementing logging systems, especially for educational purposes,  adherence to privacy regulations is critical.</p>"},{"location":"tutorial/logging/#gdpr-compliance","title":"GDPR Compliance","text":"<p>For users in the European Union, the General Data Protection Regulation (GDPR) applies:</p> <ol> <li>Explicit Consent - Implement a consent banner:</li> </ol> <pre><code>// Cookie consent implementation\nfunction showConsentBanner() {\n  const banner = document.createElement('div');\n  banner.className = 'consent-banner';\n  banner.innerHTML = `\n    &lt;p&gt;This site uses cookies and logging to improve your learning experience.\n    We track how you use our educational materials to make them better.&lt;/p&gt;\n    &lt;button id=\"accept-consent\"&gt;Accept&lt;/button&gt;\n    &lt;button id=\"reject-consent\"&gt;Reject&lt;/button&gt;\n  `;\n  document.body.appendChild(banner);\n\n  document.getElementById('accept-consent').addEventListener('click', () =&gt; {\n    localStorage.setItem('consent_given', 'true');\n    banner.remove();\n    initializeLogging();\n  });\n\n  document.getElementById('reject-consent').addEventListener('click', () =&gt; {\n    localStorage.setItem('consent_given', 'false');\n    banner.remove();\n  });\n}\n\n// Check if consent already given\nif (localStorage.getItem('consent_given') === 'true') {\n  initializeLogging();\n} else if (localStorage.getItem('consent_given') === null) {\n  showConsentBanner();\n}\n</code></pre>"},{"location":"tutorial/logging/#data-minimization-only-collect-whats-necessary","title":"Data Minimization** - Only collect what's necessary:","text":"<pre><code>// Example of data minimization in logging\nfunction logMinimalData(eventType, eventData) {\n  // Remove any personally identifiable information\n  const sanitizedData = {...eventData};\n  delete sanitizedData.email;\n  delete sanitizedData.fullName;\n\n  // Log only essential data\n  logInteraction(eventType, sanitizedData);\n}\n</code></pre>"},{"location":"tutorial/logging/#coppa-and-ferpa-compliance","title":"COPPA and FERPA Compliance","text":"<p>For educational materials that might be used by children or in educational institutions in the US:</p> <ol> <li>Children's Online Privacy Protection Act (COPPA) - For users under 13:</li> </ol> <pre><code>// Age verification for COPPA compliance\nfunction checkAgeCompliance() {\n  const userAge = localStorage.getItem('user_age');\n\n  if (!userAge) {\n    const age = prompt(\"Please enter your age for compliance purposes:\");\n    localStorage.setItem('user_age', age);\n\n    if (parseInt(age) &lt; 13) {\n      // Disable personal data collection for under 13\n      window.loggingLevel = 'minimal';\n    } else {\n      window.loggingLevel = 'standard';\n    }\n  }\n}\n</code></pre> <ol> <li>Family Educational Rights and Privacy Act (FERPA) - For educational institutions:</li> </ol> <pre><code>// Example of FERPA compliant logging\nfunction educationalLogging(eventType, eventData) {\n  // Use institution-assigned ID instead of personal identifiers\n  const payload = {\n    institutionId: window.institutionId,\n    courseId: window.courseId,\n    studentId: window.studentId, // Institution-assigned, not PII\n    eventType: eventType,\n    eventData: eventData\n  };\n\n  // Logging code...\n}\n</code></pre>"},{"location":"tutorial/logging/#building-an-analytics-dashboard","title":"Building an Analytics Dashboard","text":"<p>Once you've collected detailed usage data, a dashboard helps visualize patterns and gain actionable insights.</p>"},{"location":"tutorial/logging/#dashboard-implementation","title":"Dashboard Implementation","text":"<ol> <li>Data Processing Pipeline:</li> </ol> <pre><code># Example data processing script for dashboard\nimport pandas as pd\nimport json\n\n# Load the log data\nlogs = []\nwith open('interaction_logs.jsonl', 'r') as f:\n    for line in f:\n        logs.append(json.loads(line))\n\n# Convert to pandas DataFrame\ndf = pd.DataFrame(logs)\n\n# Process by event type\nmicrosim_usage = df[df['eventType'] == 'microsim_end'].groupby('eventData.simId').agg({\n    'eventData.duration': ['count', 'mean', 'median', 'min', 'max']\n})\n\n# Generate insights\nunderutilized_pages = df.groupby('page').size().sort_values().head(10)\npopular_pages = df.groupby('page').size().sort_values(ascending=False).head(10)\npopular_search_terms = df[df['eventType'] == 'search_query']['eventData.query'].value_counts().head(20)\n\n# Export for dashboard\nmicrosim_usage.to_csv('dashboard_data/microsim_usage.csv')\nunderutilized_pages.to_csv('dashboard_data/underutilized_pages.csv')\npopular_pages.to_csv('dashboard_data/popular_pages.csv')\npopular_search_terms.to_csv('dashboard_data/popular_search_terms.csv')\n</code></pre>"},{"location":"tutorial/logging/#dashboard-visualization","title":"Dashboard Visualization","text":"<pre><code>// Using a library like Chart.js for the dashboard\nfunction loadDashboard() {\n  // MicroSim usage chart\n  fetch('dashboard_data/microsim_usage.json')\n    .then(response =&gt; response.json())\n    .then(data =&gt; {\n      const ctx = document.getElementById('microsim-usage-chart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: Object.keys(data),\n          datasets: [{\n            label: 'Average Usage Time (seconds)',\n            data: Object.values(data).map(item =&gt; item.mean),\n            backgroundColor: 'rgba(54, 162, 235, 0.5)'\n          }]\n        }\n      });\n    });\n\n  // Other dashboard charts...\n}\n</code></pre>"},{"location":"tutorial/logging/#real-time-monitoring","title":"Real-time Monitoring","text":"<p>For real-time insights into active usage:</p> <pre><code>// Server-side with Socket.io for real-time dashboard\nconst io = require('socket.io')(server);\n\n// When logging an event\napp.post('/log', (req, res) =&gt; {\n  const data = req.body;\n\n  // Save to database...\n\n  // Emit for real-time dashboard\n  io.emit('new_event', data);\n\n  res.json({success: true});\n});\n\n// Client-side dashboard updates\nconst socket = io.connect('https://your-logging-server.com');\nsocket.on('new_event', (data) =&gt; {\n  // Update dashboard in real-time\n  updateDashboardMetrics(data);\n});\n</code></pre>"},{"location":"tutorial/logging/#intelligent-content-recommendations","title":"Intelligent Content Recommendations","text":"<p>Use your logging data to power a recommendation engine:</p> <pre><code># Simplified recommendation engine\ndef generate_recommendations(user_id):\n    # Get user's recent activity\n    user_logs = db.query(f\"SELECT * FROM logs WHERE user_id = '{user_id}' ORDER BY timestamp DESC LIMIT 100\")\n\n    # Extract concepts and topics the user has engaged with\n    user_concepts = extract_concepts_from_logs(user_logs)\n\n    # Find related content that hasn't been viewed\n    recommendations = db.query(f\"\"\"\n        SELECT page_id, title FROM content\n        WHERE primary_concept IN ({','.join(user_concepts)})\n        AND page_id NOT IN (\n            SELECT page FROM logs WHERE user_id = '{user_id}' AND eventType = 'page_view'\n        )\n        LIMIT 5\n    \"\"\")\n\n    return recommendations\n</code></pre>"},{"location":"tutorial/logging/#identifying-underutilized-content","title":"Identifying Underutilized Content","text":"<p>One key advantage of comprehensive logging is identifying which sections of your intelligent textbook aren't receiving adequate attention.</p>"},{"location":"tutorial/logging/#content-engagement-analysis","title":"Content Engagement Analysis","text":"<pre><code># Analyze content engagement\ndef analyze_content_engagement(logs_df, threshold=0.1):\n    # Get all pages\n    all_pages = get_all_pages_from_site_map()\n\n    # Count views per page\n    page_views = logs_df[logs_df['eventType'] == 'page_view'].groupby('page').size()\n\n    # Calculate total views\n    total_views = page_views.sum()\n\n    # Find pages with less than threshold% of total views\n    underutilized = []\n    for page in all_pages:\n        if page not in page_views or page_views[page] / total_views &lt; threshold:\n            underutilized.append({\n                'page': page,\n                'views': page_views.get(page, 0),\n                'percentage': (page_views.get(page, 0) / total_views) * 100 if total_views &gt; 0 else 0\n            })\n\n    return sorted(underutilized, key=lambda x: x['views'])\n</code></pre> <p>By implementing these detailed logging strategies, you'll gain valuable insights  into how users interact with your intelligent textbooks.  This data will guide your content development efforts, helping you create more engaging and effective educational resources that truly meet your learners' needs.</p>"},{"location":"tutorial/markdown/","title":"Markdown Tutorial","text":""},{"location":"tutorial/markdown/#markdown-tutorial_1","title":"Markdown Tutorial","text":"<p>Although mature XML-based book standards such as DocBook have robust consistency for interoperability between publishing systems, Markdown has no official standards. Each project has its own way of creating and extending Markdown for their own purposes and different build tools frequently only support whatever standards they like. As a result, there is very little consistency between Markdown systems. Markdown standards are also frequently extended by different projects to support their specific needs.</p>"},{"location":"tutorial/markdown/#headers","title":"Headers","text":"<p>Headers in Markdown are created using the hash symbol (#). The number of hash symbols indicates the level of the header.</p> <pre><code># Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6\n</code></pre>"},{"location":"tutorial/markdown/#lists","title":"Lists","text":"<p>Markdown supports both unnumbered (bullet) lists and numbered (ordered) lists.</p>"},{"location":"tutorial/markdown/#unnumbered-lists","title":"Unnumbered Lists","text":"<p>Unnumbered lists can be created using asterisks (*), plus signs (+), or hyphens (-).</p> <pre><code>* Item 1\n* Item 2\n  * Nested item 2.1\n  * Nested item 2.2\n* Item 3\n\n- Alternative item 1\n- Alternative item 2\n\n+ Another alternative item 1\n+ Another alternative item 2\n</code></pre>"},{"location":"tutorial/markdown/#numbered-lists","title":"Numbered Lists","text":"<p>Numbered lists are created using numbers followed by periods.</p> <pre><code>1. First item\n2. Second item\n   1. Nested item 2.1\n   2. Nested item 2.2\n3. Third item\n</code></pre> <p>Note: The actual numbers don't matter in Markdown source - they will be automatically numbered in the rendered output.</p> <pre><code>1. First item\n1. Second item\n1. Third item\n</code></pre> <p>This will still render as 1, 2, 3.</p>"},{"location":"tutorial/markdown/#images","title":"Images","text":"<p>Images can be inserted with an exclamation mark, followed by alt text in brackets, and the image URL in parentheses.</p> <pre><code>![Alt text for the image](path/to/image.jpg)\n\n![Logo of our project](img/logo.png \"Optional title\")\n</code></pre> <p>For more control, MkDocs Material supports additional attributes:</p> <pre><code>![Image with attributes](image.jpg){: width=\"300px\" align=\"right\" }\n</code></pre>"},{"location":"tutorial/markdown/#links","title":"Links","text":"<p>Links are created using square brackets for the link text followed by the URL in parentheses.</p> <pre><code>[Link text](https://example.com)\n\n[Link with title](https://example.com \"Title text shown on hover\")\n\n[Reference-style link][reference id]\n\n[reference id]: https://example.com \"Optional title\"\n</code></pre> <p>For internal links in MkDocs:</p> <pre><code>[Link to another page](../folder/page.md)\n\n[Link to a section on the same page](#section-id)\n</code></pre>"},{"location":"tutorial/markdown/#admonitions","title":"Admonitions","text":"<p>MkDocs Material extends Markdown with admonitions for highlighted content. These require the <code>admonition</code> and <code>pymdownx.details</code> extensions.</p> <pre><code>!!! note \"Optional explicit title\"\n    This is a note admonition.\n\n!!! tip\n    This is a tip.\n\n!!! warning\n    This is a warning.\n\n!!! danger\n    This highlights dangerous actions.\n\n??? question \"Collapsible admonition (closed by default)\"\n    This admonition is collapsible and closed by default.\n\n???+ example \"Collapsible admonition (open by default)\"\n    This admonition is collapsible and open by default.\n</code></pre>"},{"location":"tutorial/markdown/#code","title":"Code","text":"<p>Inline code is wrapped with backticks.</p> <pre><code>Use the `print()` function in Python.\n</code></pre> <p>Code blocks use triple backticks, optionally followed by the language name for syntax highlighting.</p> <p><pre><code>```python\ndef hello_world():\n    print(\"Hello, world!\")\n</code></pre> <pre><code>MkDocs Material also supports line numbers and highlighting specific lines:\n\n```markdown\n```python linenums=\"1\" hl_lines=\"2 3\"\ndef hello_world():\n    # This line is highlighted\n    print(\"Hello, world!\")\n    return True\n</code></pre> <pre><code>## Equations\n\nMkDocs Material supports math equations using MathJax when the appropriate extensions are enabled.\n\nInline math equations:\n\n```markdown\nThe formula for the area of a circle is $A = \\pi r^2$.\n</code></pre></p> <p>Block equations:</p> <pre><code>$$\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n$$\n</code></pre> <p>For more complex equations with multi-line alignment:</p> <pre><code>$$\n\\begin{align}\nx &amp;= y + z \\\\\n  &amp;= a + b\n\\end{align}\n$$\n</code></pre>"},{"location":"tutorial/navigation/","title":"Navigation","text":"<p>Modern displays tend to be very wide.</p> <p></p> <p>The one in the image above is over 5120 pixels wide and 1440 pixels high.</p> <p>For this reason, we place our navigation links on the left of the main display. We discourage our users from using top navigation such as tabs.</p> <p>The typical structure of our books is the following</p> <ul> <li>Chapters contain content with animations imbedded using Javascript or iframes</li> <li>Prompts contain sample prompts that you give to large-langauge models to generate customized content</li> <li>Sims contain MicroSims and other standalone animation programs</li> <li>Tutorial contains content for step by step processes for specific tasks</li> </ul> <p>In addition, we suggest some of the following descrete makrdown files:</p> <ul> <li>License - tells the user what rules govern the reuse of this content</li> <li>About - gives a high-level overview about the book, the learning objectives of the book, the intended audience and the background of the authors</li> <li>Course Description - contains a set of one or more typical single-page descriptions of this course as it might appear in a course catalog</li> <li>Glossary - contains a set of level 4 markdown headers each with a term and a definition.  These terms are designed to be easy to link from any page using the automatic complete of editors such as Visual Studio Code with the markdown plugin.</li> <li>References - links to other web sites or papers</li> <li>How We Built This Site - give an overview of the software and tools used to generate the website from markdown</li> <li>Contact - how to reach the authors or support community.  Note that many books use the GitHub pages to track feature requests and to report bugs.</li> </ul>"},{"location":"tutorial/navigation/#sample-nav-configuration","title":"Sample Nav Configuration","text":"<p><code>yaml nav:   - Home: index.md   - About: about.md   - Tutorial:     - Introduction: tutorial/index.md     - Getting Started: tutorial/getting-started.md     - Navigation: tutorial/navigation.md     - Admonitions: tutorial/admonitions.md     - Quizzes: tutorial/quizzes.md     - Upper Alpha Lists: tutorial/upper-alpha-lists.md     - Google Analytics: tutorial/google-analytics.md   - Prompts:     - Introduction: prompts/index.md     - Feature Mapping: prompts/feature-mapping.md     - Enumerate Concepts: prompts/enumerate-concepts.md     - Generate Logo: prompts/generate-logo.md   - Glossary: glossary.md   - Table of Contents: toc.md   - License: license.md   - How We Built This Site: how-we-built-this-site.md   - References: references.md   - Contact: contact.md</code></p>"},{"location":"tutorial/quizzes/","title":"Quizes","text":"<p>Generative AI tools are very good at creating quizzes to help students assess their own knowledge of a concept. But how should these questions be stored within a mkdocs-material website.  Here are some options.</p>"},{"location":"tutorial/quizzes/#enable-uppercase-alpha-lists","title":"Enable Uppercase Alpha Lists","text":"<p>By default, Markdown ordered lists only produce lists with integer numbers. However, many mulitple choice answers use uppercase alpha formats. To enable this feature we need to do two things:</p> <ol> <li>Enable the markdown within HTML option</li> <li>Add a CSS rule to turn on uppercase alpha lists</li> </ol>"},{"location":"tutorial/quizzes/#step-1-enable-the-markdown-in-html","title":"Step 1: Enable the Markdown In HTML","text":"<p>Normally when you place HTML in your Markdown, the parser will just skip over the entire block of HTML.  However, if you enable the <code>md_in_html</code> extension the parser will look inside all HTML blocks for markdown to process.</p> <p>You must modify your <code>mkdocs.yml</code> file to add the <code>md_in_html</code> extension like in the following example.</p> <pre><code>markdown_extensions:\n  - md_in_html \n</code></pre>"},{"location":"tutorial/quizzes/#step-2-wrap-your-quiz-questions-in-an-html-div","title":"Step 2: Wrap Your Quiz Questions in an HTML div","text":""},{"location":"tutorial/social/","title":"Adding Social Link Previews","text":""},{"location":"tutorial/social/#why-social-headers","title":"Why Social Headers","text":"<p>Pros</p> <p>Cons</p>"},{"location":"tutorial/social/#modifying-your-mkdocsyml","title":"Modifying Your mkdocs.yml","text":"<pre><code>plugins:\n  - social\n</code></pre>"},{"location":"tutorial/social/#how-it-works","title":"How It Works","text":"<p>The Cache:</p> <p></p>"},{"location":"tutorial/social/#_1","title":"Social","text":""},{"location":"tutorial/social/#testing-your-social","title":"Testing Your Social","text":""},{"location":"tutorial/testing/","title":"Testing Your Intelligent Textbook","text":""},{"location":"tutorial/testing/#checking-for-broken-links","title":"Checking for Broken Links","text":""},{"location":"tutorial/testing/#usability-testing","title":"Usability Testing","text":""},{"location":"tutorial/upper-alpha-lists/","title":"Using the MD-in-HTML Markdown Extension","text":"<p>Here is an elegant solution to the multiple-choice numbering problem.</p> <p>By default, Markdown parser ignores any content within a raw HTML block-level element. So when you normally wrap a markdown list in a div for styling, the Markdown parser just skips over all the markdown within the div block.</p> <p>However, with the <code>md-in-html</code> extension enabled, the content of a raw HTML block-level element is always parsed as Markdown. You can turn this on by including a <code>markdown</code> attribute on the opening tag. The markdown attribute will be stripped from the output, while all other attributes will be preserved.</p> <p>After you enable the <code>md-in-html</code> extension, you can add Markdown text inside an HTML element like <code>`div</code>. You can then add a class to that div and modify the CSS to change the formatting just within that block of Markup.  This is exactly what we want for numbering our question responses with uppercase letters.</p> <p>Here are the three simple steps:</p>"},{"location":"tutorial/upper-alpha-lists/#step-1-modify-your-mkdocsyml","title":"Step 1: Modify your mkdocs.yml","text":"<p>You need to add the <code>md_in_html</code> markup extension and also make sure you add an <code>extra.css</code> file.</p> <pre><code>markdown_extensions:\n  - md_in_html\nextra_css:\n  - css/extra.css\n</code></pre>"},{"location":"tutorial/upper-alpha-lists/#step-2-add-a-css-rule-to-extracss","title":"Step 2: Add A CSS Rule to extra.css","text":"<p>Now go create or edit the <code>docs/css/extra.css</code> file and add the following rule:</p> <pre><code>.upper-alpha ol {\n  list-style-type: upper-alpha;\n}\n</code></pre> <p>This rule says \"If you have a ordered list within any element that is in the class <code>upper-alpha</code> the apply the rule <code>list-style-type: upper-alpha</code>.</p> <p>This will change the lits items to use A. B. C. D. etc. instead of 1. 2. 3. 4.</p>"},{"location":"tutorial/upper-alpha-lists/#step-3-add-div-to-the-question-responses","title":"Step 3: Add Div to the Question Responses","text":"<pre><code>&lt;div class=\"upper-alpha\" markdown&gt;\n1. First item\n2. Second item\n3. Third item\n4. Fourth item\n&lt;/div&gt;\n</code></pre> <p>The result is perfect!</p> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> <li>Fourth item</li> </ol>"},{"location":"tutorial/upper-alpha-lists/#references","title":"References","text":"<p>Python Markdown Extensions md_in_html</p>"}]}